/*
* generated by Xtext
*/
grammar InternalLuniferaDocGrammar;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.lunifera.doc.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.lunifera.doc.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.lunifera.doc.dsl.services.LuniferaDocGrammarGrammarAccess;

}

@parser::members {

 	private LuniferaDocGrammarGrammarAccess grammarAccess;
 	
    public InternalLuniferaDocGrammarParser(TokenStream input, LuniferaDocGrammarGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "NamedDocument";	
   	}
   	
   	@Override
   	protected LuniferaDocGrammarGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleNamedDocument
entryRuleNamedDocument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedDocumentRule()); }
	 iv_ruleNamedDocument=ruleNamedDocument 
	 { $current=$iv_ruleNamedDocument.current; } 
	 EOF 
;

// Rule NamedDocument
ruleNamedDocument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNamedDocumentAccess().getDocLayouterParserRuleCall_0()); 
    }
    this_DocLayouter_0=ruleDocLayouter
    { 
        $current = $this_DocLayouter_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedDocumentAccess().getDocumentParserRuleCall_1()); 
    }
    this_Document_1=ruleDocument
    { 
        $current = $this_Document_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDocument
entryRuleDocument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDocumentRule()); }
	 iv_ruleDocument=ruleDocument 
	 { $current=$iv_ruleDocument.current; } 
	 EOF 
;

// Rule Document
ruleDocument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDocumentAccess().getEntityDocumentParserRuleCall_0()); 
    }
    this_EntityDocument_0=ruleEntityDocument
    { 
        $current = $this_EntityDocument_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDocumentAccess().getDTODocumentParserRuleCall_1()); 
    }
    this_DTODocument_1=ruleDTODocument
    { 
        $current = $this_DTODocument_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDocumentAccess().getBPMProcessDocumentParserRuleCall_2()); 
    }
    this_BPMProcessDocument_2=ruleBPMProcessDocument
    { 
        $current = $this_BPMProcessDocument_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDocumentAccess().getBPMHumanTaskDocumentParserRuleCall_3()); 
    }
    this_BPMHumanTaskDocument_3=ruleBPMHumanTaskDocument
    { 
        $current = $this_BPMHumanTaskDocument_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDocumentAccess().getVaaclipseViewDocumentParserRuleCall_4()); 
    }
    this_VaaclipseViewDocument_4=ruleVaaclipseViewDocument
    { 
        $current = $this_VaaclipseViewDocument_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDocumentAccess().getUIDocumentParserRuleCall_5()); 
    }
    this_UIDocument_5=ruleUIDocument
    { 
        $current = $this_UIDocument_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDocLayouter
entryRuleDocLayouter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDocLayouterRule()); }
	 iv_ruleDocLayouter=ruleDocLayouter 
	 { $current=$iv_ruleDocLayouter.current; } 
	 EOF 
;

// Rule DocLayouter
ruleDocLayouter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getDocLayouterAccess().getGeneralDocumentParserRuleCall()); 
    }
    this_GeneralDocument_0=ruleGeneralDocument
    { 
        $current = $this_GeneralDocument_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleDocumentInclude
entryRuleDocumentInclude returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDocumentIncludeRule()); }
	 iv_ruleDocumentInclude=ruleDocumentInclude 
	 { $current=$iv_ruleDocumentInclude.current; } 
	 EOF 
;

// Rule DocumentInclude
ruleDocumentInclude returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0='include' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDocumentIncludeAccess().getIncludeKeyword_0_0_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDocumentIncludeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDocumentIncludeAccess().getDocumentLDocDocumentCrossReference_0_0_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDocumentIncludeAccess().getAsKeyword_0_0_2());
    }
(
(
		lv_varName_3_0=RULE_ID
		{
			newLeafNode(lv_varName_3_0, grammarAccess.getDocumentIncludeAccess().getVarNameIDTerminalRuleCall_0_0_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDocumentIncludeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"varName",
        		lv_varName_3_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_provided_4_0=	'provided' 
    {
        newLeafNode(lv_provided_4_0, grammarAccess.getDocumentIncludeAccess().getProvidedProvidedKeyword_0_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDocumentIncludeRule());
	        }
       		setWithLastConsumed($current, "provided", true, "provided");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getDocumentIncludeAccess().getProvidedTypeProvidedTypeEnumRuleCall_0_1_1_0_0()); 
	    }
		lv_providedType_5_0=ruleProvidedType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDocumentIncludeRule());
	        }
       		set(
       			$current, 
       			"providedType",
        		lv_providedType_5_0, 
        		"ProvidedType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDocumentIncludeAccess().getProvidedJVMTypeJvmTypeReferenceParserRuleCall_0_1_1_1_0()); 
	    }
		lv_providedJVMType_6_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDocumentIncludeRule());
	        }
       		set(
       			$current, 
       			"providedJVMType",
        		lv_providedJVMType_6_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_7='as' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDocumentIncludeAccess().getAsKeyword_0_1_2());
    }
(
(
		lv_varName_8_0=RULE_ID
		{
			newLeafNode(lv_varName_8_0, grammarAccess.getDocumentIncludeAccess().getVarNameIDTerminalRuleCall_0_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDocumentIncludeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"varName",
        		lv_varName_8_0, 
        		"ID");
	    }

)
)))	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDocumentIncludeAccess().getSemicolonKeyword_1());
    }
)
;





// Entry rule entryRuleGeneralDocument
entryRuleGeneralDocument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeneralDocumentRule()); }
	 iv_ruleGeneralDocument=ruleGeneralDocument 
	 { $current=$iv_ruleGeneralDocument.current; } 
	 EOF 
;

// Rule GeneralDocument
ruleGeneralDocument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Layouter' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGeneralDocumentAccess().getLayouterKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGeneralDocumentAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeneralDocumentRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGeneralDocumentAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGeneralDocumentAccess().getImportsXImportDeclarationParserRuleCall_3_0()); 
	    }
		lv_imports_3_0=ruleXImportDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeneralDocumentRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_3_0, 
        		"XImportDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getGeneralDocumentAccess().getIncludesDocumentIncludeParserRuleCall_4_0()); 
	    }
		lv_includes_4_0=ruleDocumentInclude		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeneralDocumentRule());
	        }
       		add(
       			$current, 
       			"includes",
        		lv_includes_4_0, 
        		"DocumentInclude");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_5='language' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getGeneralDocumentAccess().getLanguageKeyword_5_0());
    }
(
(
		lv_language_6_0=RULE_ID
		{
			newLeafNode(lv_language_6_0, grammarAccess.getGeneralDocumentAccess().getLanguageIDTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGeneralDocumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"language",
        		lv_language_6_0, 
        		"ID");
	    }

)
)	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getGeneralDocumentAccess().getSemicolonKeyword_5_2());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGeneralDocumentAccess().getContentRichStringParserRuleCall_6_0()); 
	    }
		lv_content_8_0=ruleRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeneralDocumentRule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_8_0, 
        		"RichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getGeneralDocumentAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleEntityDocument
entryRuleEntityDocument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityDocumentRule()); }
	 iv_ruleEntityDocument=ruleEntityDocument 
	 { $current=$iv_ruleEntityDocument.current; } 
	 EOF 
;

// Rule EntityDocument
ruleEntityDocument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='EntityDocument' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEntityDocumentAccess().getEntityDocumentKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityDocumentAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityDocumentRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='covers' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEntityDocumentAccess().getCoversKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityDocumentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getEntityDocumentAccess().getModelLTypeCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEntityDocumentAccess().getLeftCurlyBracketKeyword_4());
    }
(	otherlv_5='language' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEntityDocumentAccess().getLanguageKeyword_5_0());
    }
(
(
		lv_language_6_0=RULE_ID
		{
			newLeafNode(lv_language_6_0, grammarAccess.getEntityDocumentAccess().getLanguageIDTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityDocumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"language",
        		lv_language_6_0, 
        		"ID");
	    }

)
)	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEntityDocumentAccess().getSemicolonKeyword_5_2());
    }
)(	otherlv_8='description' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getEntityDocumentAccess().getDescriptionKeyword_6_0());
    }
	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getEntityDocumentAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityDocumentAccess().getDescriptionRichStringParserRuleCall_6_2_0()); 
	    }
		lv_description_10_0=ruleRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityDocumentRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_10_0, 
        		"RichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getEntityDocumentAccess().getRightCurlyBracketKeyword_6_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityDocumentAccess().getFieldsEntityFieldParserRuleCall_7_0()); 
	    }
		lv_fields_12_0=ruleEntityField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityDocumentRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_12_0, 
        		"EntityField");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getEntityDocumentAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleEntityField
entryRuleEntityField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityFieldRule()); }
	 iv_ruleEntityField=ruleEntityField 
	 { $current=$iv_ruleEntityField.current; } 
	 EOF 
;

// Rule EntityField
ruleEntityField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getEntityFieldAccess().getLDocEntityFieldAction_0(),
            $current);
    }
)	otherlv_1='field' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEntityFieldAccess().getFieldKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityFieldRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getEntityFieldAccess().getTypeFieldLFeatureCrossReference_2_0()); 
	}

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEntityFieldAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityFieldAccess().getDescriptionRichStringParserRuleCall_4_0()); 
	    }
		lv_description_4_0=ruleRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityFieldRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_4_0, 
        		"RichString");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEntityFieldAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleDTODocument
entryRuleDTODocument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDTODocumentRule()); }
	 iv_ruleDTODocument=ruleDTODocument 
	 { $current=$iv_ruleDTODocument.current; } 
	 EOF 
;

// Rule DTODocument
ruleDTODocument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='DTODocument' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDTODocumentAccess().getDTODocumentKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDTODocumentAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDTODocumentRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='covers' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDTODocumentAccess().getCoversKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDTODocumentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDTODocumentAccess().getModelLTypeCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDTODocumentAccess().getLeftCurlyBracketKeyword_4());
    }
(	otherlv_5='language' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDTODocumentAccess().getLanguageKeyword_5_0());
    }
(
(
		lv_language_6_0=RULE_ID
		{
			newLeafNode(lv_language_6_0, grammarAccess.getDTODocumentAccess().getLanguageIDTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDTODocumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"language",
        		lv_language_6_0, 
        		"ID");
	    }

)
)	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDTODocumentAccess().getSemicolonKeyword_5_2());
    }
)(	otherlv_8='description' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDTODocumentAccess().getDescriptionKeyword_6_0());
    }
	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDTODocumentAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDTODocumentAccess().getDescriptionRichStringParserRuleCall_6_2_0()); 
	    }
		lv_description_10_0=ruleRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDTODocumentRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_10_0, 
        		"RichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDTODocumentAccess().getRightCurlyBracketKeyword_6_3());
    }
)?(	otherlv_12='properties' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDTODocumentAccess().getPropertiesKeyword_7_0());
    }
	otherlv_13='{' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getDTODocumentAccess().getLeftCurlyBracketKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDTODocumentAccess().getFieldsDTOPropertyParserRuleCall_7_2_0()); 
	    }
		lv_fields_14_0=ruleDTOProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDTODocumentRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_14_0, 
        		"DTOProperty");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getDTODocumentAccess().getRightCurlyBracketKeyword_7_3());
    }
)?	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getDTODocumentAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleDTOProperty
entryRuleDTOProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDTOPropertyRule()); }
	 iv_ruleDTOProperty=ruleDTOProperty 
	 { $current=$iv_ruleDTOProperty.current; } 
	 EOF 
;

// Rule DTOProperty
ruleDTOProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='name' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDTOPropertyAccess().getNameKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDTOPropertyAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDTOPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDTOPropertyAccess().getSemicolonKeyword_2());
    }
	otherlv_3='description' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDTOPropertyAccess().getDescriptionKeyword_3());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDTOPropertyAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDTOPropertyAccess().getDescriptionRichStringParserRuleCall_5_0()); 
	    }
		lv_description_5_0=ruleRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDTOPropertyRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_5_0, 
        		"RichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDTOPropertyAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleBPMProcessDocument
entryRuleBPMProcessDocument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBPMProcessDocumentRule()); }
	 iv_ruleBPMProcessDocument=ruleBPMProcessDocument 
	 { $current=$iv_ruleBPMProcessDocument.current; } 
	 EOF 
;

// Rule BPMProcessDocument
ruleBPMProcessDocument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='BPMProcessDocument' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBPMProcessDocumentAccess().getBPMProcessDocumentKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBPMProcessDocumentAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBPMProcessDocumentRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='covers' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBPMProcessDocumentAccess().getCoversKeyword_2());
    }
(
(
		lv_process_3_0=RULE_STRING
		{
			newLeafNode(lv_process_3_0, grammarAccess.getBPMProcessDocumentAccess().getProcessSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBPMProcessDocumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"process",
        		lv_process_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBPMProcessDocumentAccess().getLeftCurlyBracketKeyword_4());
    }
(	otherlv_5='language' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBPMProcessDocumentAccess().getLanguageKeyword_5_0());
    }
(
(
		lv_language_6_0=RULE_ID
		{
			newLeafNode(lv_language_6_0, grammarAccess.getBPMProcessDocumentAccess().getLanguageIDTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBPMProcessDocumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"language",
        		lv_language_6_0, 
        		"ID");
	    }

)
)	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getBPMProcessDocumentAccess().getSemicolonKeyword_5_2());
    }
)	otherlv_8='description' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBPMProcessDocumentAccess().getDescriptionKeyword_6());
    }
	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getBPMProcessDocumentAccess().getLeftCurlyBracketKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBPMProcessDocumentAccess().getDescriptionRichStringParserRuleCall_8_0()); 
	    }
		lv_description_10_0=ruleRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBPMProcessDocumentRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_10_0, 
        		"RichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getBPMProcessDocumentAccess().getRightCurlyBracketKeyword_9());
    }
	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getBPMProcessDocumentAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleBPMHumanTaskDocument
entryRuleBPMHumanTaskDocument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBPMHumanTaskDocumentRule()); }
	 iv_ruleBPMHumanTaskDocument=ruleBPMHumanTaskDocument 
	 { $current=$iv_ruleBPMHumanTaskDocument.current; } 
	 EOF 
;

// Rule BPMHumanTaskDocument
ruleBPMHumanTaskDocument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='BPMHumanTaskDocument' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBPMHumanTaskDocumentAccess().getBPMHumanTaskDocumentKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBPMHumanTaskDocumentAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBPMHumanTaskDocumentRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='covers' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBPMHumanTaskDocumentAccess().getCoversKeyword_2());
    }
(
(
		lv_task_3_0=RULE_STRING
		{
			newLeafNode(lv_task_3_0, grammarAccess.getBPMHumanTaskDocumentAccess().getTaskSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBPMHumanTaskDocumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"task",
        		lv_task_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBPMHumanTaskDocumentAccess().getLeftCurlyBracketKeyword_4());
    }
(	otherlv_5='language' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBPMHumanTaskDocumentAccess().getLanguageKeyword_5_0());
    }
(
(
		lv_language_6_0=RULE_ID
		{
			newLeafNode(lv_language_6_0, grammarAccess.getBPMHumanTaskDocumentAccess().getLanguageIDTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBPMHumanTaskDocumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"language",
        		lv_language_6_0, 
        		"ID");
	    }

)
)	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getBPMHumanTaskDocumentAccess().getSemicolonKeyword_5_2());
    }
)	otherlv_8='description' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBPMHumanTaskDocumentAccess().getDescriptionKeyword_6());
    }
	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getBPMHumanTaskDocumentAccess().getLeftCurlyBracketKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBPMHumanTaskDocumentAccess().getDescriptionRichStringParserRuleCall_8_0()); 
	    }
		lv_description_10_0=ruleRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBPMHumanTaskDocumentRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_10_0, 
        		"RichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getBPMHumanTaskDocumentAccess().getRightCurlyBracketKeyword_9());
    }
	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getBPMHumanTaskDocumentAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleVaaclipseViewDocument
entryRuleVaaclipseViewDocument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVaaclipseViewDocumentRule()); }
	 iv_ruleVaaclipseViewDocument=ruleVaaclipseViewDocument 
	 { $current=$iv_ruleVaaclipseViewDocument.current; } 
	 EOF 
;

// Rule VaaclipseViewDocument
ruleVaaclipseViewDocument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='VaaclipseViewDocument' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVaaclipseViewDocumentAccess().getVaaclipseViewDocumentKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVaaclipseViewDocumentAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVaaclipseViewDocumentRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='covers' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVaaclipseViewDocumentAccess().getCoversKeyword_2());
    }
(
(
		lv_view_3_0=RULE_STRING
		{
			newLeafNode(lv_view_3_0, grammarAccess.getVaaclipseViewDocumentAccess().getViewSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVaaclipseViewDocumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"view",
        		lv_view_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVaaclipseViewDocumentAccess().getLeftCurlyBracketKeyword_4());
    }
(	otherlv_5='language' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVaaclipseViewDocumentAccess().getLanguageKeyword_5_0());
    }
(
(
		lv_language_6_0=RULE_ID
		{
			newLeafNode(lv_language_6_0, grammarAccess.getVaaclipseViewDocumentAccess().getLanguageIDTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVaaclipseViewDocumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"language",
        		lv_language_6_0, 
        		"ID");
	    }

)
)	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getVaaclipseViewDocumentAccess().getSemicolonKeyword_5_2());
    }
)	otherlv_8='description' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getVaaclipseViewDocumentAccess().getDescriptionKeyword_6());
    }
	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getVaaclipseViewDocumentAccess().getLeftCurlyBracketKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVaaclipseViewDocumentAccess().getDescriptionRichStringParserRuleCall_8_0()); 
	    }
		lv_description_10_0=ruleRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVaaclipseViewDocumentRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_10_0, 
        		"RichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getVaaclipseViewDocumentAccess().getRightCurlyBracketKeyword_9());
    }
	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getVaaclipseViewDocumentAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleUIDocument
entryRuleUIDocument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUIDocumentRule()); }
	 iv_ruleUIDocument=ruleUIDocument 
	 { $current=$iv_ruleUIDocument.current; } 
	 EOF 
;

// Rule UIDocument
ruleUIDocument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='UIDocument' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUIDocumentAccess().getUIDocumentKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUIDocumentAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUIDocumentRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='covers' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUIDocumentAccess().getCoversKeyword_2());
    }
(
(
		lv_ui_3_0=RULE_STRING
		{
			newLeafNode(lv_ui_3_0, grammarAccess.getUIDocumentAccess().getUiSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUIDocumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ui",
        		lv_ui_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUIDocumentAccess().getLeftCurlyBracketKeyword_4());
    }
(	otherlv_5='language' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getUIDocumentAccess().getLanguageKeyword_5_0());
    }
(
(
		lv_language_6_0=RULE_ID
		{
			newLeafNode(lv_language_6_0, grammarAccess.getUIDocumentAccess().getLanguageIDTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUIDocumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"language",
        		lv_language_6_0, 
        		"ID");
	    }

)
)	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getUIDocumentAccess().getSemicolonKeyword_5_2());
    }
)	otherlv_8='description' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getUIDocumentAccess().getDescriptionKeyword_6());
    }
	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getUIDocumentAccess().getLeftCurlyBracketKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUIDocumentAccess().getDescriptionRichStringParserRuleCall_8_0()); 
	    }
		lv_description_10_0=ruleRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUIDocumentRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_10_0, 
        		"RichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getUIDocumentAccess().getRightCurlyBracketKeyword_9());
    }
	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getUIDocumentAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleRichString
entryRuleRichString returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringRule()); }
	 iv_ruleRichString=ruleRichString 
	 { $current=$iv_ruleRichString.current; } 
	 EOF 
;

// Rule RichString
ruleRichString returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringAccess().getRichStringAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringAccess().getExpressionsRichStringLiteralParserRuleCall_1_0_0()); 
	    }
		lv_expressions_1_0=ruleRichStringLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_1_0, 
        		"RichStringLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringAccess().getExpressionsRichStringLiteralStartParserRuleCall_1_1_0_0()); 
	    }
		lv_expressions_2_0=ruleRichStringLiteralStart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_2_0, 
        		"RichStringLiteralStart");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringAccess().getExpressionsRichStringPartParserRuleCall_1_1_1_0()); 
	    }
		lv_expressions_3_0=ruleRichStringPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_3_0, 
        		"RichStringPart");
	        afterParserOrEnumRuleCall();
	    }

)
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringAccess().getExpressionsRichStringLiteralInbetweenParserRuleCall_1_1_2_0_0()); 
	    }
		lv_expressions_4_0=ruleRichStringLiteralInbetween		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_4_0, 
        		"RichStringLiteralInbetween");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringAccess().getExpressionsRichStringPartParserRuleCall_1_1_2_1_0()); 
	    }
		lv_expressions_5_0=ruleRichStringPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_5_0, 
        		"RichStringPart");
	        afterParserOrEnumRuleCall();
	    }

)
)?)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringAccess().getExpressionsRichStringLiteralEndParserRuleCall_1_1_3_0()); 
	    }
		lv_expressions_6_0=ruleRichStringLiteralEnd		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_6_0, 
        		"RichStringLiteralEnd");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleRichStringLiteral
entryRuleRichStringLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringLiteralRule()); }
	 iv_ruleRichStringLiteral=ruleRichStringLiteral 
	 { $current=$iv_ruleRichStringLiteral.current; } 
	 EOF 
;

// Rule RichStringLiteral
ruleRichStringLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringLiteralAccess().getRichStringLiteralAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_RICH_TEXT
		{
			newLeafNode(lv_value_1_0, grammarAccess.getRichStringLiteralAccess().getValueRICH_TEXTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"RICH_TEXT");
	    }

)
))
;





// Entry rule entryRuleRichStringLiteralStart
entryRuleRichStringLiteralStart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringLiteralStartRule()); }
	 iv_ruleRichStringLiteralStart=ruleRichStringLiteralStart 
	 { $current=$iv_ruleRichStringLiteralStart.current; } 
	 EOF 
;

// Rule RichStringLiteralStart
ruleRichStringLiteralStart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringLiteralStartAccess().getRichStringLiteralAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_RICH_TEXT_START
		{
			newLeafNode(lv_value_1_0, grammarAccess.getRichStringLiteralStartAccess().getValueRICH_TEXT_STARTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringLiteralStartRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"RICH_TEXT_START");
	    }

)
))
;





// Entry rule entryRuleRichStringLiteralInbetween
entryRuleRichStringLiteralInbetween returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringLiteralInbetweenRule()); }
	 iv_ruleRichStringLiteralInbetween=ruleRichStringLiteralInbetween 
	 { $current=$iv_ruleRichStringLiteralInbetween.current; } 
	 EOF 
;

// Rule RichStringLiteralInbetween
ruleRichStringLiteralInbetween returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringLiteralInbetweenAccess().getRichStringLiteralAction_0(),
            $current);
    }
)((
(
		lv_value_1_0=RULE_RICH_TEXT_INBETWEEN
		{
			newLeafNode(lv_value_1_0, grammarAccess.getRichStringLiteralInbetweenAccess().getValueRICH_TEXT_INBETWEENTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringLiteralInbetweenRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"RICH_TEXT_INBETWEEN");
	    }

)
)
    |(
(
		lv_value_2_0=RULE_COMMENT_RICH_TEXT_INBETWEEN
		{
			newLeafNode(lv_value_2_0, grammarAccess.getRichStringLiteralInbetweenAccess().getValueCOMMENT_RICH_TEXT_INBETWEENTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringLiteralInbetweenRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"COMMENT_RICH_TEXT_INBETWEEN");
	    }

)
)))
;





// Entry rule entryRuleRichStringLiteralEnd
entryRuleRichStringLiteralEnd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringLiteralEndRule()); }
	 iv_ruleRichStringLiteralEnd=ruleRichStringLiteralEnd 
	 { $current=$iv_ruleRichStringLiteralEnd.current; } 
	 EOF 
;

// Rule RichStringLiteralEnd
ruleRichStringLiteralEnd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringLiteralEndAccess().getRichStringLiteralAction_0(),
            $current);
    }
)((
(
		lv_value_1_0=RULE_RICH_TEXT_END
		{
			newLeafNode(lv_value_1_0, grammarAccess.getRichStringLiteralEndAccess().getValueRICH_TEXT_ENDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringLiteralEndRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"RICH_TEXT_END");
	    }

)
)
    |(
(
		lv_value_2_0=RULE_COMMENT_RICH_TEXT_END
		{
			newLeafNode(lv_value_2_0, grammarAccess.getRichStringLiteralEndAccess().getValueCOMMENT_RICH_TEXT_ENDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringLiteralEndRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"COMMENT_RICH_TEXT_END");
	    }

)
)))
;





// Entry rule entryRuleInternalRichString
entryRuleInternalRichString returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInternalRichStringRule()); }
	 iv_ruleInternalRichString=ruleInternalRichString 
	 { $current=$iv_ruleInternalRichString.current; } 
	 EOF 
;

// Rule InternalRichString
ruleInternalRichString returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInternalRichStringAccess().getRichStringAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getInternalRichStringAccess().getExpressionsRichStringLiteralInbetweenParserRuleCall_1_0_0()); 
	    }
		lv_expressions_1_0=ruleRichStringLiteralInbetween		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInternalRichStringRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_1_0, 
        		"RichStringLiteralInbetween");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getInternalRichStringAccess().getExpressionsRichStringPartParserRuleCall_1_1_0_0()); 
	    }
		lv_expressions_2_0=ruleRichStringPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInternalRichStringRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_2_0, 
        		"RichStringPart");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInternalRichStringAccess().getExpressionsRichStringLiteralInbetweenParserRuleCall_1_1_1_0()); 
	    }
		lv_expressions_3_0=ruleRichStringLiteralInbetween		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInternalRichStringRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_3_0, 
        		"RichStringLiteralInbetween");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
;





// Entry rule entryRuleRichStringPart
entryRuleRichStringPart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringPartRule()); }
	 iv_ruleRichStringPart=ruleRichStringPart 
	 { $current=$iv_ruleRichStringPart.current; } 
	 EOF 
;

// Rule RichStringPart
ruleRichStringPart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getXExpressionInsideBlockParserRuleCall_0()); 
    }
    this_XExpressionInsideBlock_0=ruleXExpressionInsideBlock
    { 
        $current = $this_XExpressionInsideBlock_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringForLoopParserRuleCall_1()); 
    }
    this_RichStringForLoop_1=ruleRichStringForLoop
    { 
        $current = $this_RichStringForLoop_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringIfParserRuleCall_2()); 
    }
    this_RichStringIf_2=ruleRichStringIf
    { 
        $current = $this_RichStringIf_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringH1ParserRuleCall_3()); 
    }
    this_RichStringH1_3=ruleRichStringH1
    { 
        $current = $this_RichStringH1_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringH2ParserRuleCall_4()); 
    }
    this_RichStringH2_4=ruleRichStringH2
    { 
        $current = $this_RichStringH2_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringH3ParserRuleCall_5()); 
    }
    this_RichStringH3_5=ruleRichStringH3
    { 
        $current = $this_RichStringH3_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringH4ParserRuleCall_6()); 
    }
    this_RichStringH4_6=ruleRichStringH4
    { 
        $current = $this_RichStringH4_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringH5ParserRuleCall_7()); 
    }
    this_RichStringH5_7=ruleRichStringH5
    { 
        $current = $this_RichStringH5_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringH6ParserRuleCall_8()); 
    }
    this_RichStringH6_8=ruleRichStringH6
    { 
        $current = $this_RichStringH6_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringChapterParserRuleCall_9()); 
    }
    this_RichStringChapter_9=ruleRichStringChapter
    { 
        $current = $this_RichStringChapter_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringSectionParserRuleCall_10()); 
    }
    this_RichStringSection_10=ruleRichStringSection
    { 
        $current = $this_RichStringSection_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringSubsectionParserRuleCall_11()); 
    }
    this_RichStringSubsection_11=ruleRichStringSubsection
    { 
        $current = $this_RichStringSubsection_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringExampleParserRuleCall_12()); 
    }
    this_RichStringExample_12=ruleRichStringExample
    { 
        $current = $this_RichStringExample_12.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringURLParserRuleCall_13()); 
    }
    this_RichStringURL_13=ruleRichStringURL
    { 
        $current = $this_RichStringURL_13.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringRefParserRuleCall_14()); 
    }
    this_RichStringRef_14=ruleRichStringRef
    { 
        $current = $this_RichStringRef_14.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringMailtoParserRuleCall_15()); 
    }
    this_RichStringMailto_15=ruleRichStringMailto
    { 
        $current = $this_RichStringMailto_15.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringSkypeParserRuleCall_16()); 
    }
    this_RichStringSkype_16=ruleRichStringSkype
    { 
        $current = $this_RichStringSkype_16.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringMovieParserRuleCall_17()); 
    }
    this_RichStringMovie_17=ruleRichStringMovie
    { 
        $current = $this_RichStringMovie_17.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringImgParserRuleCall_18()); 
    }
    this_RichStringImg_18=ruleRichStringImg
    { 
        $current = $this_RichStringImg_18.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringBoldParserRuleCall_19()); 
    }
    this_RichStringBold_19=ruleRichStringBold
    { 
        $current = $this_RichStringBold_19.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringUnderlineParserRuleCall_20()); 
    }
    this_RichStringUnderline_20=ruleRichStringUnderline
    { 
        $current = $this_RichStringUnderline_20.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringItalicParserRuleCall_21()); 
    }
    this_RichStringItalic_21=ruleRichStringItalic
    { 
        $current = $this_RichStringItalic_21.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringSpanParserRuleCall_22()); 
    }
    this_RichStringSpan_22=ruleRichStringSpan
    { 
        $current = $this_RichStringSpan_22.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringCodeParserRuleCall_23()); 
    }
    this_RichStringCode_23=ruleRichStringCode
    { 
        $current = $this_RichStringCode_23.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringTableParserRuleCall_24()); 
    }
    this_RichStringTable_24=ruleRichStringTable
    { 
        $current = $this_RichStringTable_24.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringTableRowParserRuleCall_25()); 
    }
    this_RichStringTableRow_25=ruleRichStringTableRow
    { 
        $current = $this_RichStringTableRow_25.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringTableCellParserRuleCall_26()); 
    }
    this_RichStringTableCell_26=ruleRichStringTableCell
    { 
        $current = $this_RichStringTableCell_26.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringListParserRuleCall_27()); 
    }
    this_RichStringList_27=ruleRichStringList
    { 
        $current = $this_RichStringList_27.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringOrderedListParserRuleCall_28()); 
    }
    this_RichStringOrderedList_28=ruleRichStringOrderedList
    { 
        $current = $this_RichStringOrderedList_28.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringListElementParserRuleCall_29()); 
    }
    this_RichStringListElement_29=ruleRichStringListElement
    { 
        $current = $this_RichStringListElement_29.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringOpenViewParserRuleCall_30()); 
    }
    this_RichStringOpenView_30=ruleRichStringOpenView
    { 
        $current = $this_RichStringOpenView_30.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringStartProcessParserRuleCall_31()); 
    }
    this_RichStringStartProcess_31=ruleRichStringStartProcess
    { 
        $current = $this_RichStringStartProcess_31.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringEntityRefParserRuleCall_32()); 
    }
    this_RichStringEntityRef_32=ruleRichStringEntityRef
    { 
        $current = $this_RichStringEntityRef_32.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringDTORefParserRuleCall_33()); 
    }
    this_RichStringDTORef_33=ruleRichStringDTORef
    { 
        $current = $this_RichStringDTORef_33.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringProcessRefParserRuleCall_34()); 
    }
    this_RichStringProcessRef_34=ruleRichStringProcessRef
    { 
        $current = $this_RichStringProcessRef_34.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringTaskRefParserRuleCall_35()); 
    }
    this_RichStringTaskRef_35=ruleRichStringTaskRef
    { 
        $current = $this_RichStringTaskRef_35.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringViewRefParserRuleCall_36()); 
    }
    this_RichStringViewRef_36=ruleRichStringViewRef
    { 
        $current = $this_RichStringViewRef_36.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringUIRefParserRuleCall_37()); 
    }
    this_RichStringUIRef_37=ruleRichStringUIRef
    { 
        $current = $this_RichStringUIRef_37.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringInfoBoxParserRuleCall_38()); 
    }
    this_RichStringInfoBox_38=ruleRichStringInfoBox
    { 
        $current = $this_RichStringInfoBox_38.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringErrorBoxParserRuleCall_39()); 
    }
    this_RichStringErrorBox_39=ruleRichStringErrorBox
    { 
        $current = $this_RichStringErrorBox_39.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringWarningBoxParserRuleCall_40()); 
    }
    this_RichStringWarningBox_40=ruleRichStringWarningBox
    { 
        $current = $this_RichStringWarningBox_40.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringAbstractsBoxParserRuleCall_41()); 
    }
    this_RichStringAbstractsBox_41=ruleRichStringAbstractsBox
    { 
        $current = $this_RichStringAbstractsBox_41.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringChecklistBoxParserRuleCall_42()); 
    }
    this_RichStringChecklistBox_42=ruleRichStringChecklistBox
    { 
        $current = $this_RichStringChecklistBox_42.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringBioBoxParserRuleCall_43()); 
    }
    this_RichStringBioBox_43=ruleRichStringBioBox
    { 
        $current = $this_RichStringBioBox_43.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringSideNoteBoxParserRuleCall_44()); 
    }
    this_RichStringSideNoteBox_44=ruleRichStringSideNoteBox
    { 
        $current = $this_RichStringSideNoteBox_44.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringContainerParserRuleCall_45()); 
    }
    this_RichStringContainer_45=ruleRichStringContainer
    { 
        $current = $this_RichStringContainer_45.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringFooterParserRuleCall_46()); 
    }
    this_RichStringFooter_46=ruleRichStringFooter
    { 
        $current = $this_RichStringFooter_46.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringHeaderParserRuleCall_47()); 
    }
    this_RichStringHeader_47=ruleRichStringHeader
    { 
        $current = $this_RichStringHeader_47.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringIndexParserRuleCall_48()); 
    }
    this_RichStringIndex_48=ruleRichStringIndex
    { 
        $current = $this_RichStringIndex_48.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringIndexElementParserRuleCall_49()); 
    }
    this_RichStringIndexElement_49=ruleRichStringIndexElement
    { 
        $current = $this_RichStringIndexElement_49.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRichStringExample
entryRuleRichStringExample returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringExampleRule()); }
	 iv_ruleRichStringExample=ruleRichStringExample 
	 { $current=$iv_ruleRichStringExample.current; } 
	 EOF 
;

// Rule RichStringExample
ruleRichStringExample returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringExampleAccess().getRichStringExampleAction_0(),
            $current);
    }
)	otherlv_1='example' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringExampleAccess().getExampleKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringExampleAccess().getExpressionInternalRichStringParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringExampleRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='/example' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRichStringExampleAccess().getExampleKeyword_3());
    }
)
;





// Entry rule entryRuleRichStringH1
entryRuleRichStringH1 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringH1Rule()); }
	 iv_ruleRichStringH1=ruleRichStringH1 
	 { $current=$iv_ruleRichStringH1.current; } 
	 EOF 
;

// Rule RichStringH1
ruleRichStringH1 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringH1Access().getRichStringH1Action_0(),
            $current);
    }
)	otherlv_1='h1' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringH1Access().getH1Keyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringH1Access().getExpressionInternalRichStringParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringH1Rule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='/h1' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRichStringH1Access().getH1Keyword_3());
    }
)
;





// Entry rule entryRuleRichStringH2
entryRuleRichStringH2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringH2Rule()); }
	 iv_ruleRichStringH2=ruleRichStringH2 
	 { $current=$iv_ruleRichStringH2.current; } 
	 EOF 
;

// Rule RichStringH2
ruleRichStringH2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringH2Access().getRichStringH2Action_0(),
            $current);
    }
)	otherlv_1='h2' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringH2Access().getH2Keyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringH2Access().getExpressionInternalRichStringParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringH2Rule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='/h2' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRichStringH2Access().getH2Keyword_3());
    }
)
;





// Entry rule entryRuleRichStringH3
entryRuleRichStringH3 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringH3Rule()); }
	 iv_ruleRichStringH3=ruleRichStringH3 
	 { $current=$iv_ruleRichStringH3.current; } 
	 EOF 
;

// Rule RichStringH3
ruleRichStringH3 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringH3Access().getRichStringH3Action_0(),
            $current);
    }
)	otherlv_1='h3' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringH3Access().getH3Keyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringH3Access().getExpressionInternalRichStringParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringH3Rule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='/h3' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRichStringH3Access().getH3Keyword_3());
    }
)
;





// Entry rule entryRuleRichStringH4
entryRuleRichStringH4 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringH4Rule()); }
	 iv_ruleRichStringH4=ruleRichStringH4 
	 { $current=$iv_ruleRichStringH4.current; } 
	 EOF 
;

// Rule RichStringH4
ruleRichStringH4 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringH4Access().getRichStringH4Action_0(),
            $current);
    }
)	otherlv_1='h4' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringH4Access().getH4Keyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringH4Access().getExpressionInternalRichStringParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringH4Rule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='/h4' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRichStringH4Access().getH4Keyword_3());
    }
)
;





// Entry rule entryRuleRichStringH5
entryRuleRichStringH5 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringH5Rule()); }
	 iv_ruleRichStringH5=ruleRichStringH5 
	 { $current=$iv_ruleRichStringH5.current; } 
	 EOF 
;

// Rule RichStringH5
ruleRichStringH5 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringH5Access().getRichStringH5Action_0(),
            $current);
    }
)	otherlv_1='h5' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringH5Access().getH5Keyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringH5Access().getExpressionInternalRichStringParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringH5Rule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='/h5' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRichStringH5Access().getH5Keyword_3());
    }
)
;





// Entry rule entryRuleRichStringH6
entryRuleRichStringH6 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringH6Rule()); }
	 iv_ruleRichStringH6=ruleRichStringH6 
	 { $current=$iv_ruleRichStringH6.current; } 
	 EOF 
;

// Rule RichStringH6
ruleRichStringH6 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringH6Access().getRichStringH6Action_0(),
            $current);
    }
)	otherlv_1='h6' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringH6Access().getH6Keyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringH6Access().getExpressionInternalRichStringParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringH6Rule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='/h6' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRichStringH6Access().getH6Keyword_3());
    }
)
;





// Entry rule entryRuleRichStringChapter
entryRuleRichStringChapter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringChapterRule()); }
	 iv_ruleRichStringChapter=ruleRichStringChapter 
	 { $current=$iv_ruleRichStringChapter.current; } 
	 EOF 
;

// Rule RichStringChapter
ruleRichStringChapter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringChapterAccess().getRichStringChapterAction_0(),
            $current);
    }
)	otherlv_1='chapter' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringChapterAccess().getChapterKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringChapterAccess().getNameValidIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringChapterRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringChapterAccess().getExpressionInternalRichStringParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringChapterRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='/chapter' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRichStringChapterAccess().getChapterKeyword_4());
    }
)
;





// Entry rule entryRuleRichStringSection
entryRuleRichStringSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringSectionRule()); }
	 iv_ruleRichStringSection=ruleRichStringSection 
	 { $current=$iv_ruleRichStringSection.current; } 
	 EOF 
;

// Rule RichStringSection
ruleRichStringSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringSectionAccess().getRichStringSectionAction_0(),
            $current);
    }
)	otherlv_1='section' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringSectionAccess().getSectionKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringSectionAccess().getNameValidIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringSectionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringSectionAccess().getExpressionInternalRichStringParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringSectionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='/section' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRichStringSectionAccess().getSectionKeyword_4());
    }
)
;





// Entry rule entryRuleRichStringSubsection
entryRuleRichStringSubsection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringSubsectionRule()); }
	 iv_ruleRichStringSubsection=ruleRichStringSubsection 
	 { $current=$iv_ruleRichStringSubsection.current; } 
	 EOF 
;

// Rule RichStringSubsection
ruleRichStringSubsection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringSubsectionAccess().getRichStringSubsectionAction_0(),
            $current);
    }
)	otherlv_1='subsection' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringSubsectionAccess().getSubsectionKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringSubsectionAccess().getNameValidIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringSubsectionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringSubsectionAccess().getExpressionInternalRichStringParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringSubsectionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='/subsection' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRichStringSubsectionAccess().getSubsectionKeyword_4());
    }
)
;





// Entry rule entryRuleRichStringURL
entryRuleRichStringURL returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringURLRule()); }
	 iv_ruleRichStringURL=ruleRichStringURL 
	 { $current=$iv_ruleRichStringURL.current; } 
	 EOF 
;

// Rule RichStringURL
ruleRichStringURL returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringURLAccess().getRichStringURLAction_0(),
            $current);
    }
)	otherlv_1='url' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringURLAccess().getUrlKeyword_1());
    }
(
(
		lv_location_2_0=RULE_STRING
		{
			newLeafNode(lv_location_2_0, grammarAccess.getRichStringURLAccess().getLocationSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringURLRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"location",
        		lv_location_2_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringURLAccess().getTextInternalRichStringParserRuleCall_3_0()); 
	    }
		lv_text_3_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringURLRule());
	        }
       		set(
       			$current, 
       			"text",
        		lv_text_3_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='/url' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRichStringURLAccess().getUrlKeyword_4());
    }
)
;





// Entry rule entryRuleRichStringRef
entryRuleRichStringRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringRefRule()); }
	 iv_ruleRichStringRef=ruleRichStringRef 
	 { $current=$iv_ruleRichStringRef.current; } 
	 EOF 
;

// Rule RichStringRef
ruleRichStringRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringRefAccess().getRichStringRefAction_0(),
            $current);
    }
)	otherlv_1='ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringRefAccess().getRefKeyword_1());
    }
(
(
		lv_refId_2_0=RULE_STRING
		{
			newLeafNode(lv_refId_2_0, grammarAccess.getRichStringRefAccess().getRefIdSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"refId",
        		lv_refId_2_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringRefAccess().getExpressionInternalRichStringParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringRefRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='/ref' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRichStringRefAccess().getRefKeyword_4());
    }
)
;





// Entry rule entryRuleRichStringMailto
entryRuleRichStringMailto returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringMailtoRule()); }
	 iv_ruleRichStringMailto=ruleRichStringMailto 
	 { $current=$iv_ruleRichStringMailto.current; } 
	 EOF 
;

// Rule RichStringMailto
ruleRichStringMailto returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringMailtoAccess().getRichStringMailtoAction_0(),
            $current);
    }
)	otherlv_1='mailto' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringMailtoAccess().getMailtoKeyword_1());
    }
(
(
		lv_email_2_0=RULE_STRING
		{
			newLeafNode(lv_email_2_0, grammarAccess.getRichStringMailtoAccess().getEmailSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringMailtoRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"email",
        		lv_email_2_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringMailtoAccess().getContentInternalRichStringParserRuleCall_3_0()); 
	    }
		lv_content_3_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringMailtoRule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_3_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='/mailto' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRichStringMailtoAccess().getMailtoKeyword_4());
    }
)
;





// Entry rule entryRuleRichStringSkype
entryRuleRichStringSkype returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringSkypeRule()); }
	 iv_ruleRichStringSkype=ruleRichStringSkype 
	 { $current=$iv_ruleRichStringSkype.current; } 
	 EOF 
;

// Rule RichStringSkype
ruleRichStringSkype returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringSkypeAccess().getRichStringSkypeAction_0(),
            $current);
    }
)	otherlv_1='skype' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringSkypeAccess().getSkypeKeyword_1());
    }
(
(
		lv_target_2_0=RULE_STRING
		{
			newLeafNode(lv_target_2_0, grammarAccess.getRichStringSkypeAccess().getTargetSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringSkypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"target",
        		lv_target_2_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringSkypeAccess().getContentInternalRichStringParserRuleCall_3_0()); 
	    }
		lv_content_3_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringSkypeRule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_3_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='/skype' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRichStringSkypeAccess().getSkypeKeyword_4());
    }
)
;





// Entry rule entryRuleRichStringMovie
entryRuleRichStringMovie returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringMovieRule()); }
	 iv_ruleRichStringMovie=ruleRichStringMovie 
	 { $current=$iv_ruleRichStringMovie.current; } 
	 EOF 
;

// Rule RichStringMovie
ruleRichStringMovie returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringMovieAccess().getRichStringMovieAction_0(),
            $current);
    }
)	otherlv_1='movie' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringMovieAccess().getMovieKeyword_1());
    }
	otherlv_2='src=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRichStringMovieAccess().getSrcKeyword_2());
    }
(
(
		lv_src_3_0=RULE_STRING
		{
			newLeafNode(lv_src_3_0, grammarAccess.getRichStringMovieAccess().getSrcSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringMovieRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"src",
        		lv_src_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='type=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRichStringMovieAccess().getTypeKeyword_4());
    }
(
(
		lv_type_5_0=RULE_STRING
		{
			newLeafNode(lv_type_5_0, grammarAccess.getRichStringMovieAccess().getTypeSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringMovieRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_5_0, 
        		"STRING");
	    }

)
)	otherlv_6='width=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRichStringMovieAccess().getWidthKeyword_6());
    }
(
(
		lv_width_7_0=RULE_STRING
		{
			newLeafNode(lv_width_7_0, grammarAccess.getRichStringMovieAccess().getWidthSTRINGTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringMovieRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"width",
        		lv_width_7_0, 
        		"STRING");
	    }

)
)	otherlv_8='height=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRichStringMovieAccess().getHeightKeyword_8());
    }
(
(
		lv_height_9_0=RULE_STRING
		{
			newLeafNode(lv_height_9_0, grammarAccess.getRichStringMovieAccess().getHeightSTRINGTerminalRuleCall_9_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringMovieRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"height",
        		lv_height_9_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringMovieAccess().getContentInternalRichStringParserRuleCall_10_0()); 
	    }
		lv_content_10_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringMovieRule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_10_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='/movie' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getRichStringMovieAccess().getMovieKeyword_11());
    }
)
;





// Entry rule entryRuleRichStringImg
entryRuleRichStringImg returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringImgRule()); }
	 iv_ruleRichStringImg=ruleRichStringImg 
	 { $current=$iv_ruleRichStringImg.current; } 
	 EOF 
;

// Rule RichStringImg
ruleRichStringImg returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringImgAccess().getRichStringImgAction_0(),
            $current);
    }
)	otherlv_1='img' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringImgAccess().getImgKeyword_1());
    }
	otherlv_2='src=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRichStringImgAccess().getSrcKeyword_2());
    }
(
(
		lv_src_3_0=RULE_STRING
		{
			newLeafNode(lv_src_3_0, grammarAccess.getRichStringImgAccess().getSrcSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringImgRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"src",
        		lv_src_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4='alt=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRichStringImgAccess().getAltKeyword_4_0());
    }
(
(
		lv_alt_5_0=RULE_STRING
		{
			newLeafNode(lv_alt_5_0, grammarAccess.getRichStringImgAccess().getAltSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringImgRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"alt",
        		lv_alt_5_0, 
        		"STRING");
	    }

)
))?(
(
		lv_small_6_0=	'small' 
    {
        newLeafNode(lv_small_6_0, grammarAccess.getRichStringImgAccess().getSmallSmallKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringImgRule());
	        }
       		setWithLastConsumed($current, "small", true, "small");
	    }

)
)?(	otherlv_7='orientation=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRichStringImgAccess().getOrientationKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringImgAccess().getOrientationMarkupOrientationEnumRuleCall_6_1_0()); 
	    }
		lv_orientation_8_0=ruleMarkupOrientation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringImgRule());
	        }
       		set(
       			$current, 
       			"orientation",
        		lv_orientation_8_0, 
        		"MarkupOrientation");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_9='/' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRichStringImgAccess().getSolidusKeyword_7());
    }
)
;





// Entry rule entryRuleRichStringBold
entryRuleRichStringBold returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringBoldRule()); }
	 iv_ruleRichStringBold=ruleRichStringBold 
	 { $current=$iv_ruleRichStringBold.current; } 
	 EOF 
;

// Rule RichStringBold
ruleRichStringBold returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringBoldAccess().getRichStringBoldAction_0(),
            $current);
    }
)	otherlv_1='b' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringBoldAccess().getBKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringBoldAccess().getExpressionInternalRichStringParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringBoldRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='/b' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRichStringBoldAccess().getBKeyword_3());
    }
)
;





// Entry rule entryRuleRichStringUnderline
entryRuleRichStringUnderline returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringUnderlineRule()); }
	 iv_ruleRichStringUnderline=ruleRichStringUnderline 
	 { $current=$iv_ruleRichStringUnderline.current; } 
	 EOF 
;

// Rule RichStringUnderline
ruleRichStringUnderline returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringUnderlineAccess().getRichStringUnderlineAction_0(),
            $current);
    }
)	otherlv_1='u' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringUnderlineAccess().getUKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringUnderlineAccess().getExpressionInternalRichStringParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringUnderlineRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='/u' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRichStringUnderlineAccess().getUKeyword_3());
    }
)
;





// Entry rule entryRuleRichStringItalic
entryRuleRichStringItalic returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringItalicRule()); }
	 iv_ruleRichStringItalic=ruleRichStringItalic 
	 { $current=$iv_ruleRichStringItalic.current; } 
	 EOF 
;

// Rule RichStringItalic
ruleRichStringItalic returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringItalicAccess().getRichStringItalicAction_0(),
            $current);
    }
)	otherlv_1='i' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringItalicAccess().getIKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringItalicAccess().getExpressionInternalRichStringParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringItalicRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='/i' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRichStringItalicAccess().getIKeyword_3());
    }
)
;





// Entry rule entryRuleRichStringSpan
entryRuleRichStringSpan returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringSpanRule()); }
	 iv_ruleRichStringSpan=ruleRichStringSpan 
	 { $current=$iv_ruleRichStringSpan.current; } 
	 EOF 
;

// Rule RichStringSpan
ruleRichStringSpan returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringSpanAccess().getRichStringSpanAction_0(),
            $current);
    }
)	otherlv_1='style' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringSpanAccess().getStyleKeyword_1());
    }
(
(
		lv_style_2_0=RULE_STRING
		{
			newLeafNode(lv_style_2_0, grammarAccess.getRichStringSpanAccess().getStyleSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringSpanRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"style",
        		lv_style_2_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringSpanAccess().getExpressionInternalRichStringParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringSpanRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='/style' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRichStringSpanAccess().getStyleKeyword_4());
    }
)
;





// Entry rule entryRuleRichStringCode
entryRuleRichStringCode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringCodeRule()); }
	 iv_ruleRichStringCode=ruleRichStringCode 
	 { $current=$iv_ruleRichStringCode.current; } 
	 EOF 
;

// Rule RichStringCode
ruleRichStringCode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringCodeAccess().getRichStringCodeAction_0(),
            $current);
    }
)	otherlv_1='code' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringCodeAccess().getCodeKeyword_1());
    }
(	otherlv_2='lang=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRichStringCodeAccess().getLangKeyword_2_0());
    }
(
(
		lv_lang_3_0=RULE_STRING
		{
			newLeafNode(lv_lang_3_0, grammarAccess.getRichStringCodeAccess().getLangSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringCodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lang",
        		lv_lang_3_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringCodeAccess().getContentInternalRichStringParserRuleCall_3_0()); 
	    }
		lv_content_4_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringCodeRule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_4_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='/code' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRichStringCodeAccess().getCodeKeyword_4());
    }
)
;





// Entry rule entryRuleRichStringTable
entryRuleRichStringTable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringTableRule()); }
	 iv_ruleRichStringTable=ruleRichStringTable 
	 { $current=$iv_ruleRichStringTable.current; } 
	 EOF 
;

// Rule RichStringTable
ruleRichStringTable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringTableAccess().getRichStringTableAction_0(),
            $current);
    }
)	otherlv_1='table' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringTableAccess().getTableKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringTableAccess().getExpressionInternalRichStringParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringTableRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='/table' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRichStringTableAccess().getTableKeyword_3());
    }
)
;





// Entry rule entryRuleRichStringTableRow
entryRuleRichStringTableRow returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringTableRowRule()); }
	 iv_ruleRichStringTableRow=ruleRichStringTableRow 
	 { $current=$iv_ruleRichStringTableRow.current; } 
	 EOF 
;

// Rule RichStringTableRow
ruleRichStringTableRow returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringTableRowAccess().getRichStringTableRowAction_0(),
            $current);
    }
)	otherlv_1='row' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringTableRowAccess().getRowKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringTableRowAccess().getExpressionInternalRichStringParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringTableRowRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='/row' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRichStringTableRowAccess().getRowKeyword_3());
    }
)
;





// Entry rule entryRuleRichStringTableCell
entryRuleRichStringTableCell returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringTableCellRule()); }
	 iv_ruleRichStringTableCell=ruleRichStringTableCell 
	 { $current=$iv_ruleRichStringTableCell.current; } 
	 EOF 
;

// Rule RichStringTableCell
ruleRichStringTableCell returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringTableCellAccess().getRichStringTableCellAction_0(),
            $current);
    }
)	otherlv_1='cell' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringTableCellAccess().getCellKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringTableCellAccess().getExpressionInternalRichStringParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringTableCellRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='/cell' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRichStringTableCellAccess().getCellKeyword_3());
    }
)
;





// Entry rule entryRuleRichStringList
entryRuleRichStringList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringListRule()); }
	 iv_ruleRichStringList=ruleRichStringList 
	 { $current=$iv_ruleRichStringList.current; } 
	 EOF 
;

// Rule RichStringList
ruleRichStringList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringListAccess().getRichStringListAction_0(),
            $current);
    }
)	otherlv_1='ul' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringListAccess().getUlKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringListAccess().getExpressionInternalRichStringParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringListRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='/ul' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRichStringListAccess().getUlKeyword_3());
    }
)
;





// Entry rule entryRuleRichStringOrderedList
entryRuleRichStringOrderedList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringOrderedListRule()); }
	 iv_ruleRichStringOrderedList=ruleRichStringOrderedList 
	 { $current=$iv_ruleRichStringOrderedList.current; } 
	 EOF 
;

// Rule RichStringOrderedList
ruleRichStringOrderedList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringOrderedListAccess().getRichStringOrderedListAction_0(),
            $current);
    }
)	otherlv_1='ol' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringOrderedListAccess().getOlKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringOrderedListAccess().getExpressionInternalRichStringParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringOrderedListRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='/ol' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRichStringOrderedListAccess().getOlKeyword_3());
    }
)
;





// Entry rule entryRuleRichStringListElement
entryRuleRichStringListElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringListElementRule()); }
	 iv_ruleRichStringListElement=ruleRichStringListElement 
	 { $current=$iv_ruleRichStringListElement.current; } 
	 EOF 
;

// Rule RichStringListElement
ruleRichStringListElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringListElementAccess().getRichStringListElementAction_0(),
            $current);
    }
)	otherlv_1='li' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringListElementAccess().getLiKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringListElementAccess().getExpressionInternalRichStringParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringListElementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='/li' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRichStringListElementAccess().getLiKeyword_3());
    }
)
;





// Entry rule entryRuleRichStringOpenView
entryRuleRichStringOpenView returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringOpenViewRule()); }
	 iv_ruleRichStringOpenView=ruleRichStringOpenView 
	 { $current=$iv_ruleRichStringOpenView.current; } 
	 EOF 
;

// Rule RichStringOpenView
ruleRichStringOpenView returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringOpenViewAccess().getRichStringOpenViewAction_0(),
            $current);
    }
)	otherlv_1='openview' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringOpenViewAccess().getOpenviewKeyword_1());
    }
(
(
		lv_viewId_2_0=RULE_STRING
		{
			newLeafNode(lv_viewId_2_0, grammarAccess.getRichStringOpenViewAccess().getViewIdSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringOpenViewRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"viewId",
        		lv_viewId_2_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringOpenViewAccess().getExpressionInternalRichStringParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringOpenViewRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='/openview' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRichStringOpenViewAccess().getOpenviewKeyword_4());
    }
)
;





// Entry rule entryRuleRichStringStartProcess
entryRuleRichStringStartProcess returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringStartProcessRule()); }
	 iv_ruleRichStringStartProcess=ruleRichStringStartProcess 
	 { $current=$iv_ruleRichStringStartProcess.current; } 
	 EOF 
;

// Rule RichStringStartProcess
ruleRichStringStartProcess returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringStartProcessAccess().getRichStringStartProcessAction_0(),
            $current);
    }
)	otherlv_1='startprocess' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringStartProcessAccess().getStartprocessKeyword_1());
    }
(
(
		lv_processId_2_0=RULE_STRING
		{
			newLeafNode(lv_processId_2_0, grammarAccess.getRichStringStartProcessAccess().getProcessIdSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringStartProcessRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"processId",
        		lv_processId_2_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringStartProcessAccess().getExpressionInternalRichStringParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringStartProcessRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='/startprocess' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRichStringStartProcessAccess().getStartprocessKeyword_4());
    }
)
;





// Entry rule entryRuleRichStringEntityRef
entryRuleRichStringEntityRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringEntityRefRule()); }
	 iv_ruleRichStringEntityRef=ruleRichStringEntityRef 
	 { $current=$iv_ruleRichStringEntityRef.current; } 
	 EOF 
;

// Rule RichStringEntityRef
ruleRichStringEntityRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringEntityRefAccess().getRichStringEntityRefAction_0(),
            $current);
    }
)	otherlv_1='entity-ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringEntityRefAccess().getEntityRefKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringEntityRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRichStringEntityRefAccess().getEntityDocLDocEntityDocumentCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringEntityRefAccess().getExpressionInternalRichStringParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringEntityRefRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='/entity-ref' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRichStringEntityRefAccess().getEntityRefKeyword_4());
    }
)
;





// Entry rule entryRuleRichStringDTORef
entryRuleRichStringDTORef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringDTORefRule()); }
	 iv_ruleRichStringDTORef=ruleRichStringDTORef 
	 { $current=$iv_ruleRichStringDTORef.current; } 
	 EOF 
;

// Rule RichStringDTORef
ruleRichStringDTORef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringDTORefAccess().getRichStringDTORefAction_0(),
            $current);
    }
)	otherlv_1='dto-ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringDTORefAccess().getDtoRefKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringDTORefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRichStringDTORefAccess().getDtoDocLDocDtoDocumentCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringDTORefAccess().getExpressionInternalRichStringParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringDTORefRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='/dto-ref' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRichStringDTORefAccess().getDtoRefKeyword_4());
    }
)
;





// Entry rule entryRuleRichStringProcessRef
entryRuleRichStringProcessRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringProcessRefRule()); }
	 iv_ruleRichStringProcessRef=ruleRichStringProcessRef 
	 { $current=$iv_ruleRichStringProcessRef.current; } 
	 EOF 
;

// Rule RichStringProcessRef
ruleRichStringProcessRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringProcessRefAccess().getRichStringProcessRefAction_0(),
            $current);
    }
)	otherlv_1='process-ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringProcessRefAccess().getProcessRefKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringProcessRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRichStringProcessRefAccess().getBpmDocLDocBPMProcessDocumentCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringProcessRefAccess().getExpressionInternalRichStringParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringProcessRefRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='/process-ref' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRichStringProcessRefAccess().getProcessRefKeyword_4());
    }
)
;





// Entry rule entryRuleRichStringTaskRef
entryRuleRichStringTaskRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringTaskRefRule()); }
	 iv_ruleRichStringTaskRef=ruleRichStringTaskRef 
	 { $current=$iv_ruleRichStringTaskRef.current; } 
	 EOF 
;

// Rule RichStringTaskRef
ruleRichStringTaskRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringTaskRefAccess().getRichStringTaskRefAction_0(),
            $current);
    }
)	otherlv_1='task-ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringTaskRefAccess().getTaskRefKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringTaskRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRichStringTaskRefAccess().getTaskDocLDocHumanTaskDocumentCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringTaskRefAccess().getExpressionInternalRichStringParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringTaskRefRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='/task-ref' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRichStringTaskRefAccess().getTaskRefKeyword_4());
    }
)
;





// Entry rule entryRuleRichStringViewRef
entryRuleRichStringViewRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringViewRefRule()); }
	 iv_ruleRichStringViewRef=ruleRichStringViewRef 
	 { $current=$iv_ruleRichStringViewRef.current; } 
	 EOF 
;

// Rule RichStringViewRef
ruleRichStringViewRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringViewRefAccess().getRichStringViewRefAction_0(),
            $current);
    }
)	otherlv_1='view-ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringViewRefAccess().getViewRefKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringViewRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRichStringViewRefAccess().getViewDocLDocViewDocumentCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringViewRefAccess().getExpressionInternalRichStringParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringViewRefRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='/view-ref' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRichStringViewRefAccess().getViewRefKeyword_4());
    }
)
;





// Entry rule entryRuleRichStringUIRef
entryRuleRichStringUIRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringUIRefRule()); }
	 iv_ruleRichStringUIRef=ruleRichStringUIRef 
	 { $current=$iv_ruleRichStringUIRef.current; } 
	 EOF 
;

// Rule RichStringUIRef
ruleRichStringUIRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringUIRefAccess().getRichStringUIRefAction_0(),
            $current);
    }
)	otherlv_1='ui-ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringUIRefAccess().getUiRefKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringUIRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRichStringUIRefAccess().getUiDocLDocUIDocumentCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringUIRefAccess().getExpressionInternalRichStringParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringUIRefRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='/ui-ref' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRichStringUIRefAccess().getUiRefKeyword_4());
    }
)
;





// Entry rule entryRuleRichStringForLoop
entryRuleRichStringForLoop returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringForLoopRule()); }
	 iv_ruleRichStringForLoop=ruleRichStringForLoop 
	 { $current=$iv_ruleRichStringForLoop.current; } 
	 EOF 
;

// Rule RichStringForLoop
ruleRichStringForLoop returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringForLoopAccess().getRichStringForLoopAction_0(),
            $current);
    }
)	otherlv_1='For' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringForLoopAccess().getForKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringForLoopAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0()); 
	    }
		lv_declaredParam_2_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringForLoopRule());
	        }
       		set(
       			$current, 
       			"declaredParam",
        		lv_declaredParam_2_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRichStringForLoopAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringForLoopAccess().getForExpressionXExpressionParserRuleCall_4_0()); 
	    }
		lv_forExpression_4_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringForLoopRule());
	        }
       		set(
       			$current, 
       			"forExpression",
        		lv_forExpression_4_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='Before' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRichStringForLoopAccess().getBeforeKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringForLoopAccess().getBeforeXExpressionParserRuleCall_5_1_0()); 
	    }
		lv_before_6_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringForLoopRule());
	        }
       		set(
       			$current, 
       			"before",
        		lv_before_6_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='Separator' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRichStringForLoopAccess().getSeparatorKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringForLoopAccess().getSeparatorXExpressionParserRuleCall_6_1_0()); 
	    }
		lv_separator_8_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringForLoopRule());
	        }
       		set(
       			$current, 
       			"separator",
        		lv_separator_8_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='After' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRichStringForLoopAccess().getAfterKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringForLoopAccess().getAfterXExpressionParserRuleCall_7_1_0()); 
	    }
		lv_after_10_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringForLoopRule());
	        }
       		set(
       			$current, 
       			"after",
        		lv_after_10_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringForLoopAccess().getEachExpressionInternalRichStringParserRuleCall_8_0()); 
	    }
		lv_eachExpression_11_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringForLoopRule());
	        }
       		set(
       			$current, 
       			"eachExpression",
        		lv_eachExpression_11_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12='Endfor' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getRichStringForLoopAccess().getEndforKeyword_9());
    }
)
;





// Entry rule entryRuleRichStringIf
entryRuleRichStringIf returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringIfRule()); }
	 iv_ruleRichStringIf=ruleRichStringIf 
	 { $current=$iv_ruleRichStringIf.current; } 
	 EOF 
;

// Rule RichStringIf
ruleRichStringIf returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringIfAccess().getRichStringIfAction_0(),
            $current);
    }
)	otherlv_1='If' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringIfAccess().getIfKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringIfAccess().getIfXExpressionParserRuleCall_2_0()); 
	    }
		lv_if_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringIfRule());
	        }
       		set(
       			$current, 
       			"if",
        		lv_if_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringIfAccess().getThenInternalRichStringParserRuleCall_3_0()); 
	    }
		lv_then_3_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringIfRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_3_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringIfAccess().getElseIfsRichStringElseIfParserRuleCall_4_0()); 
	    }
		lv_elseIfs_4_0=ruleRichStringElseIf		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringIfRule());
	        }
       		add(
       			$current, 
       			"elseIfs",
        		lv_elseIfs_4_0, 
        		"RichStringElseIf");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_5='Else' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRichStringIfAccess().getElseKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringIfAccess().getElseInternalRichStringParserRuleCall_5_1_0()); 
	    }
		lv_else_6_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringIfRule());
	        }
       		set(
       			$current, 
       			"else",
        		lv_else_6_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_7='EndIf' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRichStringIfAccess().getEndIfKeyword_6());
    }
)
;





// Entry rule entryRuleRichStringInfoBox
entryRuleRichStringInfoBox returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringInfoBoxRule()); }
	 iv_ruleRichStringInfoBox=ruleRichStringInfoBox 
	 { $current=$iv_ruleRichStringInfoBox.current; } 
	 EOF 
;

// Rule RichStringInfoBox
ruleRichStringInfoBox returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringInfoBoxAccess().getRichStringBoxAction_0(),
            $current);
    }
)(
(
		lv_info_1_0=	'infobox' 
    {
        newLeafNode(lv_info_1_0, grammarAccess.getRichStringInfoBoxAccess().getInfoInfoboxKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringInfoBoxRule());
	        }
       		setWithLastConsumed($current, "info", true, "infobox");
	    }

)
)(	otherlv_2='title=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRichStringInfoBoxAccess().getTitleKeyword_2_0());
    }
(
(
		lv_title_3_0=RULE_STRING
		{
			newLeafNode(lv_title_3_0, grammarAccess.getRichStringInfoBoxAccess().getTitleSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringInfoBoxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_3_0, 
        		"STRING");
	    }

)
))(
(
		lv_small_4_0=	'small' 
    {
        newLeafNode(lv_small_4_0, grammarAccess.getRichStringInfoBoxAccess().getSmallSmallKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringInfoBoxRule());
	        }
       		setWithLastConsumed($current, "small", true, "small");
	    }

)
)?(	otherlv_5='orientation=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRichStringInfoBoxAccess().getOrientationKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringInfoBoxAccess().getOrientationMarkupOrientationEnumRuleCall_4_1_0()); 
	    }
		lv_orientation_6_0=ruleMarkupOrientation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringInfoBoxRule());
	        }
       		set(
       			$current, 
       			"orientation",
        		lv_orientation_6_0, 
        		"MarkupOrientation");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringInfoBoxAccess().getExpressionInternalRichStringParserRuleCall_5_0()); 
	    }
		lv_expression_7_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringInfoBoxRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_7_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='/infobox' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRichStringInfoBoxAccess().getInfoboxKeyword_6());
    }
)
;





// Entry rule entryRuleRichStringErrorBox
entryRuleRichStringErrorBox returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringErrorBoxRule()); }
	 iv_ruleRichStringErrorBox=ruleRichStringErrorBox 
	 { $current=$iv_ruleRichStringErrorBox.current; } 
	 EOF 
;

// Rule RichStringErrorBox
ruleRichStringErrorBox returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringErrorBoxAccess().getRichStringBoxAction_0(),
            $current);
    }
)(
(
		lv_error_1_0=	'errorbox' 
    {
        newLeafNode(lv_error_1_0, grammarAccess.getRichStringErrorBoxAccess().getErrorErrorboxKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringErrorBoxRule());
	        }
       		setWithLastConsumed($current, "error", true, "errorbox");
	    }

)
)(	otherlv_2='title=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRichStringErrorBoxAccess().getTitleKeyword_2_0());
    }
(
(
		lv_title_3_0=RULE_STRING
		{
			newLeafNode(lv_title_3_0, grammarAccess.getRichStringErrorBoxAccess().getTitleSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringErrorBoxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_3_0, 
        		"STRING");
	    }

)
))(
(
		lv_small_4_0=	'small' 
    {
        newLeafNode(lv_small_4_0, grammarAccess.getRichStringErrorBoxAccess().getSmallSmallKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringErrorBoxRule());
	        }
       		setWithLastConsumed($current, "small", true, "small");
	    }

)
)?(	otherlv_5='orientation=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRichStringErrorBoxAccess().getOrientationKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringErrorBoxAccess().getOrientationMarkupOrientationEnumRuleCall_4_1_0()); 
	    }
		lv_orientation_6_0=ruleMarkupOrientation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringErrorBoxRule());
	        }
       		set(
       			$current, 
       			"orientation",
        		lv_orientation_6_0, 
        		"MarkupOrientation");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringErrorBoxAccess().getExpressionInternalRichStringParserRuleCall_5_0()); 
	    }
		lv_expression_7_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringErrorBoxRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_7_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='/errorbox' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRichStringErrorBoxAccess().getErrorboxKeyword_6());
    }
)
;





// Entry rule entryRuleRichStringWarningBox
entryRuleRichStringWarningBox returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringWarningBoxRule()); }
	 iv_ruleRichStringWarningBox=ruleRichStringWarningBox 
	 { $current=$iv_ruleRichStringWarningBox.current; } 
	 EOF 
;

// Rule RichStringWarningBox
ruleRichStringWarningBox returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringWarningBoxAccess().getRichStringBoxAction_0(),
            $current);
    }
)(
(
		lv_warning_1_0=	'warningbox' 
    {
        newLeafNode(lv_warning_1_0, grammarAccess.getRichStringWarningBoxAccess().getWarningWarningboxKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringWarningBoxRule());
	        }
       		setWithLastConsumed($current, "warning", true, "warningbox");
	    }

)
)(	otherlv_2='title=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRichStringWarningBoxAccess().getTitleKeyword_2_0());
    }
(
(
		lv_title_3_0=RULE_STRING
		{
			newLeafNode(lv_title_3_0, grammarAccess.getRichStringWarningBoxAccess().getTitleSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringWarningBoxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_3_0, 
        		"STRING");
	    }

)
))(
(
		lv_small_4_0=	'small' 
    {
        newLeafNode(lv_small_4_0, grammarAccess.getRichStringWarningBoxAccess().getSmallSmallKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringWarningBoxRule());
	        }
       		setWithLastConsumed($current, "small", true, "small");
	    }

)
)?(	otherlv_5='orientation=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRichStringWarningBoxAccess().getOrientationKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringWarningBoxAccess().getOrientationMarkupOrientationEnumRuleCall_4_1_0()); 
	    }
		lv_orientation_6_0=ruleMarkupOrientation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringWarningBoxRule());
	        }
       		set(
       			$current, 
       			"orientation",
        		lv_orientation_6_0, 
        		"MarkupOrientation");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringWarningBoxAccess().getExpressionInternalRichStringParserRuleCall_5_0()); 
	    }
		lv_expression_7_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringWarningBoxRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_7_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='/warningbox' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRichStringWarningBoxAccess().getWarningboxKeyword_6());
    }
)
;





// Entry rule entryRuleRichStringAbstractsBox
entryRuleRichStringAbstractsBox returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringAbstractsBoxRule()); }
	 iv_ruleRichStringAbstractsBox=ruleRichStringAbstractsBox 
	 { $current=$iv_ruleRichStringAbstractsBox.current; } 
	 EOF 
;

// Rule RichStringAbstractsBox
ruleRichStringAbstractsBox returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringAbstractsBoxAccess().getRichStringBoxAction_0(),
            $current);
    }
)(
(
		lv_abstracts_1_0=	'abstractsbox' 
    {
        newLeafNode(lv_abstracts_1_0, grammarAccess.getRichStringAbstractsBoxAccess().getAbstractsAbstractsboxKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringAbstractsBoxRule());
	        }
       		setWithLastConsumed($current, "abstracts", true, "abstractsbox");
	    }

)
)(	otherlv_2='title=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRichStringAbstractsBoxAccess().getTitleKeyword_2_0());
    }
(
(
		lv_title_3_0=RULE_STRING
		{
			newLeafNode(lv_title_3_0, grammarAccess.getRichStringAbstractsBoxAccess().getTitleSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringAbstractsBoxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_3_0, 
        		"STRING");
	    }

)
))(
(
		lv_small_4_0=	'small' 
    {
        newLeafNode(lv_small_4_0, grammarAccess.getRichStringAbstractsBoxAccess().getSmallSmallKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringAbstractsBoxRule());
	        }
       		setWithLastConsumed($current, "small", true, "small");
	    }

)
)?(	otherlv_5='orientation=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRichStringAbstractsBoxAccess().getOrientationKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringAbstractsBoxAccess().getOrientationMarkupOrientationEnumRuleCall_4_1_0()); 
	    }
		lv_orientation_6_0=ruleMarkupOrientation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringAbstractsBoxRule());
	        }
       		set(
       			$current, 
       			"orientation",
        		lv_orientation_6_0, 
        		"MarkupOrientation");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringAbstractsBoxAccess().getExpressionInternalRichStringParserRuleCall_5_0()); 
	    }
		lv_expression_7_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringAbstractsBoxRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_7_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='/abstractsbox' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRichStringAbstractsBoxAccess().getAbstractsboxKeyword_6());
    }
)
;





// Entry rule entryRuleRichStringChecklistBox
entryRuleRichStringChecklistBox returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringChecklistBoxRule()); }
	 iv_ruleRichStringChecklistBox=ruleRichStringChecklistBox 
	 { $current=$iv_ruleRichStringChecklistBox.current; } 
	 EOF 
;

// Rule RichStringChecklistBox
ruleRichStringChecklistBox returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringChecklistBoxAccess().getRichStringBoxAction_0(),
            $current);
    }
)(
(
		lv_checklist_1_0=	'checklistbox' 
    {
        newLeafNode(lv_checklist_1_0, grammarAccess.getRichStringChecklistBoxAccess().getChecklistChecklistboxKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringChecklistBoxRule());
	        }
       		setWithLastConsumed($current, "checklist", true, "checklistbox");
	    }

)
)(	otherlv_2='title=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRichStringChecklistBoxAccess().getTitleKeyword_2_0());
    }
(
(
		lv_title_3_0=RULE_STRING
		{
			newLeafNode(lv_title_3_0, grammarAccess.getRichStringChecklistBoxAccess().getTitleSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringChecklistBoxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_3_0, 
        		"STRING");
	    }

)
))(
(
		lv_small_4_0=	'small' 
    {
        newLeafNode(lv_small_4_0, grammarAccess.getRichStringChecklistBoxAccess().getSmallSmallKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringChecklistBoxRule());
	        }
       		setWithLastConsumed($current, "small", true, "small");
	    }

)
)?(	otherlv_5='orientation=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRichStringChecklistBoxAccess().getOrientationKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringChecklistBoxAccess().getOrientationMarkupOrientationEnumRuleCall_4_1_0()); 
	    }
		lv_orientation_6_0=ruleMarkupOrientation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringChecklistBoxRule());
	        }
       		set(
       			$current, 
       			"orientation",
        		lv_orientation_6_0, 
        		"MarkupOrientation");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringChecklistBoxAccess().getExpressionInternalRichStringParserRuleCall_5_0()); 
	    }
		lv_expression_7_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringChecklistBoxRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_7_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='/checklistbox' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRichStringChecklistBoxAccess().getChecklistboxKeyword_6());
    }
)
;





// Entry rule entryRuleRichStringBioBox
entryRuleRichStringBioBox returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringBioBoxRule()); }
	 iv_ruleRichStringBioBox=ruleRichStringBioBox 
	 { $current=$iv_ruleRichStringBioBox.current; } 
	 EOF 
;

// Rule RichStringBioBox
ruleRichStringBioBox returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringBioBoxAccess().getRichStringBoxAction_0(),
            $current);
    }
)(
(
		lv_bio_1_0=	'biobox' 
    {
        newLeafNode(lv_bio_1_0, grammarAccess.getRichStringBioBoxAccess().getBioBioboxKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringBioBoxRule());
	        }
       		setWithLastConsumed($current, "bio", true, "biobox");
	    }

)
)(	otherlv_2='title=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRichStringBioBoxAccess().getTitleKeyword_2_0());
    }
(
(
		lv_title_3_0=RULE_STRING
		{
			newLeafNode(lv_title_3_0, grammarAccess.getRichStringBioBoxAccess().getTitleSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringBioBoxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_3_0, 
        		"STRING");
	    }

)
))(
(
		lv_small_4_0=	'small' 
    {
        newLeafNode(lv_small_4_0, grammarAccess.getRichStringBioBoxAccess().getSmallSmallKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringBioBoxRule());
	        }
       		setWithLastConsumed($current, "small", true, "small");
	    }

)
)?(	otherlv_5='orientation=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRichStringBioBoxAccess().getOrientationKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringBioBoxAccess().getOrientationMarkupOrientationEnumRuleCall_4_1_0()); 
	    }
		lv_orientation_6_0=ruleMarkupOrientation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringBioBoxRule());
	        }
       		set(
       			$current, 
       			"orientation",
        		lv_orientation_6_0, 
        		"MarkupOrientation");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringBioBoxAccess().getExpressionInternalRichStringParserRuleCall_5_0()); 
	    }
		lv_expression_7_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringBioBoxRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_7_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='/biobox' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRichStringBioBoxAccess().getBioboxKeyword_6());
    }
)
;





// Entry rule entryRuleRichStringSideNoteBox
entryRuleRichStringSideNoteBox returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringSideNoteBoxRule()); }
	 iv_ruleRichStringSideNoteBox=ruleRichStringSideNoteBox 
	 { $current=$iv_ruleRichStringSideNoteBox.current; } 
	 EOF 
;

// Rule RichStringSideNoteBox
ruleRichStringSideNoteBox returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringSideNoteBoxAccess().getRichStringBoxAction_0(),
            $current);
    }
)(
(
		lv_sidenote_1_0=	'sidenotebox' 
    {
        newLeafNode(lv_sidenote_1_0, grammarAccess.getRichStringSideNoteBoxAccess().getSidenoteSidenoteboxKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringSideNoteBoxRule());
	        }
       		setWithLastConsumed($current, "sidenote", true, "sidenotebox");
	    }

)
)(	otherlv_2='title=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRichStringSideNoteBoxAccess().getTitleKeyword_2_0());
    }
(
(
		lv_title_3_0=RULE_STRING
		{
			newLeafNode(lv_title_3_0, grammarAccess.getRichStringSideNoteBoxAccess().getTitleSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringSideNoteBoxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_3_0, 
        		"STRING");
	    }

)
))(
(
		lv_small_4_0=	'small' 
    {
        newLeafNode(lv_small_4_0, grammarAccess.getRichStringSideNoteBoxAccess().getSmallSmallKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringSideNoteBoxRule());
	        }
       		setWithLastConsumed($current, "small", true, "small");
	    }

)
)?(	otherlv_5='orientation=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRichStringSideNoteBoxAccess().getOrientationKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringSideNoteBoxAccess().getOrientationMarkupOrientationEnumRuleCall_4_1_0()); 
	    }
		lv_orientation_6_0=ruleMarkupOrientation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringSideNoteBoxRule());
	        }
       		set(
       			$current, 
       			"orientation",
        		lv_orientation_6_0, 
        		"MarkupOrientation");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringSideNoteBoxAccess().getExpressionInternalRichStringParserRuleCall_5_0()); 
	    }
		lv_expression_7_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringSideNoteBoxRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_7_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='/sidenotebox' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRichStringSideNoteBoxAccess().getSidenoteboxKeyword_6());
    }
)
;





// Entry rule entryRuleRichStringContainer
entryRuleRichStringContainer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringContainerRule()); }
	 iv_ruleRichStringContainer=ruleRichStringContainer 
	 { $current=$iv_ruleRichStringContainer.current; } 
	 EOF 
;

// Rule RichStringContainer
ruleRichStringContainer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringContainerAccess().getRichStringContainerAction_0(),
            $current);
    }
)	otherlv_1='container' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringContainerAccess().getContainerKeyword_1());
    }
(
(
		lv_small_2_0=	'small' 
    {
        newLeafNode(lv_small_2_0, grammarAccess.getRichStringContainerAccess().getSmallSmallKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringContainerRule());
	        }
       		setWithLastConsumed($current, "small", true, "small");
	    }

)
)?(	otherlv_3='orientation=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRichStringContainerAccess().getOrientationKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringContainerAccess().getOrientationMarkupOrientationEnumRuleCall_3_1_0()); 
	    }
		lv_orientation_4_0=ruleMarkupOrientation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringContainerRule());
	        }
       		set(
       			$current, 
       			"orientation",
        		lv_orientation_4_0, 
        		"MarkupOrientation");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringContainerAccess().getExpressionInternalRichStringParserRuleCall_4_0()); 
	    }
		lv_expression_5_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringContainerRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='/container' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRichStringContainerAccess().getContainerKeyword_5());
    }
)
;









// Entry rule entryRuleRichStringFooter
entryRuleRichStringFooter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringFooterRule()); }
	 iv_ruleRichStringFooter=ruleRichStringFooter 
	 { $current=$iv_ruleRichStringFooter.current; } 
	 EOF 
;

// Rule RichStringFooter
ruleRichStringFooter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringFooterAccess().getRichStringFooterAction_0(),
            $current);
    }
)	otherlv_1='footer' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringFooterAccess().getFooterKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringFooterAccess().getExpressionInternalRichStringParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringFooterRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='/footer' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRichStringFooterAccess().getFooterKeyword_3());
    }
)
;





// Entry rule entryRuleRichStringHeader
entryRuleRichStringHeader returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringHeaderRule()); }
	 iv_ruleRichStringHeader=ruleRichStringHeader 
	 { $current=$iv_ruleRichStringHeader.current; } 
	 EOF 
;

// Rule RichStringHeader
ruleRichStringHeader returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringHeaderAccess().getRichStringHeaderAction_0(),
            $current);
    }
)	otherlv_1='header' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringHeaderAccess().getHeaderKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringHeaderAccess().getExpressionInternalRichStringParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringHeaderRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='/header' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRichStringHeaderAccess().getHeaderKeyword_3());
    }
)
;





// Entry rule entryRuleRichStringIndex
entryRuleRichStringIndex returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringIndexRule()); }
	 iv_ruleRichStringIndex=ruleRichStringIndex 
	 { $current=$iv_ruleRichStringIndex.current; } 
	 EOF 
;

// Rule RichStringIndex
ruleRichStringIndex returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringIndexAccess().getRichStringIndexAction_0(),
            $current);
    }
)	otherlv_1='index' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringIndexAccess().getIndexKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringIndexAccess().getExpressionInternalRichStringParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringIndexRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='/index' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRichStringIndexAccess().getIndexKeyword_3());
    }
)
;





// Entry rule entryRuleRichStringIndexElement
entryRuleRichStringIndexElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringIndexElementRule()); }
	 iv_ruleRichStringIndexElement=ruleRichStringIndexElement 
	 { $current=$iv_ruleRichStringIndexElement.current; } 
	 EOF 
;

// Rule RichStringIndexElement
ruleRichStringIndexElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringIndexElementAccess().getRichStringIndexElementAction_0(),
            $current);
    }
)	otherlv_1='indexelement' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringIndexElementAccess().getIndexelementKeyword_1());
    }
	otherlv_2='ref=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRichStringIndexElementAccess().getRefKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRichStringIndexElementRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getRichStringIndexElementAccess().getIndexElementIndexElementCrossReference_3_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringIndexElementAccess().getExpressionInternalRichStringParserRuleCall_4_0()); 
	    }
		lv_expression_4_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringIndexElementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_4_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='/indexelement' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRichStringIndexElementAccess().getIndexelementKeyword_5());
    }
)
;





// Entry rule entryRuleRichStringElseIf
entryRuleRichStringElseIf returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRichStringElseIfRule()); }
	 iv_ruleRichStringElseIf=ruleRichStringElseIf 
	 { $current=$iv_ruleRichStringElseIf.current; } 
	 EOF 
;

// Rule RichStringElseIf
ruleRichStringElseIf returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRichStringElseIfAccess().getRichStringElseIfAction_0(),
            $current);
    }
)	otherlv_1='ElseIf' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRichStringElseIfAccess().getElseIfKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringElseIfAccess().getIfXExpressionParserRuleCall_2_0()); 
	    }
		lv_if_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringElseIfRule());
	        }
       		set(
       			$current, 
       			"if",
        		lv_if_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRichStringElseIfAccess().getThenInternalRichStringParserRuleCall_3_0()); 
	    }
		lv_then_3_0=ruleInternalRichString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRichStringElseIfRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_3_0, 
        		"InternalRichString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXExpression
entryRuleXExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExpressionRule()); }
	 iv_ruleXExpression=ruleXExpression 
	 { $current=$iv_ruleXExpression.current; } 
	 EOF 
;

// Rule XExpression
ruleXExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall()); 
    }
    this_XAssignment_0=ruleXAssignment
    { 
        $current = $this_XAssignment_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleXAssignment
entryRuleXAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAssignmentRule()); }
	 iv_ruleXAssignment=ruleXAssignment 
	 { $current=$iv_ruleXAssignment.current; } 
	 EOF 
;

// Rule XAssignment
ruleXAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAssignmentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
	    }
		ruleFeatureCallID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2()); 
    }
ruleOpSingleAssign
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0()); 
	    }
		lv_value_3_0=ruleXAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAssignmentRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"XAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
    { 
        newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0()); 
    }
    this_XOrExpression_4=ruleXOrExpression
    { 
        $current = $this_XOrExpression_4.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpMultiAssign
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAssignmentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
	    }
		ruleOpMultiAssign		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0()); 
	    }
		lv_rightOperand_7_0=ruleXAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAssignmentRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_7_0, 
        		"XAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))?))
;





// Entry rule entryRuleOpSingleAssign
entryRuleOpSingleAssign returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpSingleAssignRule()); } 
	 iv_ruleOpSingleAssign=ruleOpSingleAssign 
	 { $current=$iv_ruleOpSingleAssign.current.getText(); }  
	 EOF 
;

// Rule OpSingleAssign
ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); 
    }

    ;





// Entry rule entryRuleOpMultiAssign
entryRuleOpMultiAssign returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpMultiAssignRule()); } 
	 iv_ruleOpMultiAssign=ruleOpMultiAssign 
	 { $current=$iv_ruleOpMultiAssign.current.getText(); }  
	 EOF 
;

// Rule OpMultiAssign
ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0()); 
    }

    |
	kw='-=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXOrExpression
entryRuleXOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXOrExpressionRule()); }
	 iv_ruleXOrExpression=ruleXOrExpression 
	 { $current=$iv_ruleXOrExpression.current; } 
	 EOF 
;

// Rule XOrExpression
ruleXOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); 
    }
    this_XAndExpression_0=ruleXAndExpression
    { 
        $current = $this_XAndExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpOr
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXOrExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpOr		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XAndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpOr
entryRuleOpOr returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpOrRule()); } 
	 iv_ruleOpOr=ruleOpOr 
	 { $current=$iv_ruleOpOr.current.getText(); }  
	 EOF 
;

// Rule OpOr
ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='||' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); 
    }

    ;





// Entry rule entryRuleXAndExpression
entryRuleXAndExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAndExpressionRule()); }
	 iv_ruleXAndExpression=ruleXAndExpression 
	 { $current=$iv_ruleXAndExpression.current; } 
	 EOF 
;

// Rule XAndExpression
ruleXAndExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); 
    }
    this_XEqualityExpression_0=ruleXEqualityExpression
    { 
        $current = $this_XEqualityExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpAnd
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAndExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpAnd		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXEqualityExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XEqualityExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpAnd
entryRuleOpAnd returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpAndRule()); } 
	 iv_ruleOpAnd=ruleOpAnd 
	 { $current=$iv_ruleOpAnd.current.getText(); }  
	 EOF 
;

// Rule OpAnd
ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='&&' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); 
    }

    ;





// Entry rule entryRuleXEqualityExpression
entryRuleXEqualityExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXEqualityExpressionRule()); }
	 iv_ruleXEqualityExpression=ruleXEqualityExpression 
	 { $current=$iv_ruleXEqualityExpression.current; } 
	 EOF 
;

// Rule XEqualityExpression
ruleXEqualityExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); 
    }
    this_XRelationalExpression_0=ruleXRelationalExpression
    { 
        $current = $this_XRelationalExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpEquality
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXEqualityExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpEquality		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXRelationalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XRelationalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpEquality
entryRuleOpEquality returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpEqualityRule()); } 
	 iv_ruleOpEquality=ruleOpEquality 
	 { $current=$iv_ruleOpEquality.current.getText(); }  
	 EOF 
;

// Rule OpEquality
ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); 
    }

    |
	kw='===' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); 
    }

    |
	kw='!==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleXRelationalExpression
entryRuleXRelationalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXRelationalExpressionRule()); }
	 iv_ruleXRelationalExpression=ruleXRelationalExpression 
	 { $current=$iv_ruleXRelationalExpression.current; } 
	 EOF 
;

// Rule XRelationalExpression
ruleXRelationalExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); 
    }
    this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression
    { 
        $current = $this_XOtherOperatorExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((((
)	'instanceof' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            $current);
    }
)	otherlv_2='instanceof' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((((
)(
(
		ruleOpCompare
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXRelationalExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
	    }
		ruleOpCompare		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0()); 
	    }
		lv_rightOperand_6_0=ruleXOtherOperatorExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_6_0, 
        		"XOtherOperatorExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleOpCompare
entryRuleOpCompare returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpCompareRule()); } 
	 iv_ruleOpCompare=ruleOpCompare 
	 { $current=$iv_ruleOpCompare.current.getText(); }  
	 EOF 
;

// Rule OpCompare
ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); 
    }

    |
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleXOtherOperatorExpression
entryRuleXOtherOperatorExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); }
	 iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression 
	 { $current=$iv_ruleXOtherOperatorExpression.current; } 
	 EOF 
;

// Rule XOtherOperatorExpression
ruleXOtherOperatorExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); 
    }
    this_XAdditiveExpression_0=ruleXAdditiveExpression
    { 
        $current = $this_XAdditiveExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpOther
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpOther		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XAdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpOther
entryRuleOpOther returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpOtherRule()); } 
	 iv_ruleOpOther=ruleOpOther 
	 { $current=$iv_ruleOpOther.current.getText(); }  
	 EOF 
;

// Rule OpOther
ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='->' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0()); 
    }

    |
	kw='..<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1()); 
    }

    |(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0()); 
    }

	kw='..' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1()); 
    }
)
    |
	kw='..' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3()); 
    }

    |
	kw='=>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4()); 
    }

    |(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0()); 
    }
((((
	'>' 

	'>' 
))=>(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0()); 
    }

	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1()); 
    }
))
    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1()); 
    }
))
    |(
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0()); 
    }
((((
	'<' 

	'<' 
))=>(
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0()); 
    }

	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1()); 
    }
))
    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1()); 
    }
))
    |
	kw='<>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7()); 
    }

    |
	kw='?:' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8()); 
    }

    |
	kw='<=>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_9()); 
    }
)
    ;





// Entry rule entryRuleXAdditiveExpression
entryRuleXAdditiveExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); }
	 iv_ruleXAdditiveExpression=ruleXAdditiveExpression 
	 { $current=$iv_ruleXAdditiveExpression.current; } 
	 EOF 
;

// Rule XAdditiveExpression
ruleXAdditiveExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); 
    }
    this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression
    { 
        $current = $this_XMultiplicativeExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpAdd
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpAdd		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXMultiplicativeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XMultiplicativeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpAdd
entryRuleOpAdd returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpAddRule()); } 
	 iv_ruleOpAdd=ruleOpAdd 
	 { $current=$iv_ruleOpAdd.current.getText(); }  
	 EOF 
;

// Rule OpAdd
ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXMultiplicativeExpression
entryRuleXMultiplicativeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); }
	 iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression 
	 { $current=$iv_ruleXMultiplicativeExpression.current; } 
	 EOF 
;

// Rule XMultiplicativeExpression
ruleXMultiplicativeExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); 
    }
    this_XUnaryOperation_0=ruleXUnaryOperation
    { 
        $current = $this_XUnaryOperation_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpMulti
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpMulti		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXUnaryOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XUnaryOperation");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpMulti
entryRuleOpMulti returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpMultiRule()); } 
	 iv_ruleOpMulti=ruleOpMulti 
	 { $current=$iv_ruleOpMulti.current.getText(); }  
	 EOF 
;

// Rule OpMulti
ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); 
    }

    |
	kw='**' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1()); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2()); 
    }

    |
	kw='%' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleXUnaryOperation
entryRuleXUnaryOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXUnaryOperationRule()); }
	 iv_ruleXUnaryOperation=ruleXUnaryOperation 
	 { $current=$iv_ruleXUnaryOperation.current; } 
	 EOF 
;

// Rule XUnaryOperation
ruleXUnaryOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXUnaryOperationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
	    }
		ruleOpUnary		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0()); 
	    }
		lv_operand_2_0=ruleXUnaryOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_2_0, 
        		"XUnaryOperation");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1()); 
    }
    this_XCastedExpression_3=ruleXCastedExpression
    { 
        $current = $this_XCastedExpression_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleOpUnary
entryRuleOpUnary returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpUnaryRule()); } 
	 iv_ruleOpUnary=ruleOpUnary 
	 { $current=$iv_ruleOpUnary.current.getText(); }  
	 EOF 
;

// Rule OpUnary
ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='!' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); 
    }

    |
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleXCastedExpression
entryRuleXCastedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCastedExpressionRule()); }
	 iv_ruleXCastedExpression=ruleXCastedExpression 
	 { $current=$iv_ruleXCastedExpression.current; } 
	 EOF 
;

// Rule XCastedExpression
ruleXCastedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXMemberFeatureCallParserRuleCall_0()); 
    }
    this_XMemberFeatureCall_0=ruleXMemberFeatureCall
    { 
        $current = $this_XMemberFeatureCall_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)	'as' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleXMemberFeatureCall
entryRuleXMemberFeatureCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); }
	 iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall 
	 { $current=$iv_ruleXMemberFeatureCall.current; } 
	 EOF 
;

// Rule XMemberFeatureCall
ruleXMemberFeatureCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); 
    }
    this_XPrimaryExpression_0=ruleXPrimaryExpression
    { 
        $current = $this_XPrimaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((((
)(	'.' 

    |(
(
	'::' 
 

)
))(
(
		ruleFeatureCallID
)
)	ruleOpSingleAssign))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
            $current);
    }
)(	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0());
    }

    |(
(
		lv_explicitStatic_3_0=	'::' 
    {
        newLeafNode(lv_explicitStatic_3_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "explicitStatic", true, "::");
	    }

)
))(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0()); 
	    }
		ruleFeatureCallID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); 
    }
ruleOpSingleAssign
    { 
        afterParserOrEnumRuleCall();
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0()); 
	    }
		lv_value_6_0=ruleXAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_6_0, 
        		"XAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((((
)(	'.' 

    |(
(
	'?.' 
 

)
)
    |(
(
	'::' 
 

)
))))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
            $current);
    }
)(	otherlv_8='.' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
    }

    |(
(
		lv_nullSafe_9_0=	'?.' 
    {
        newLeafNode(lv_nullSafe_9_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "nullSafe", true, "?.");
	    }

)
)
    |(
(
		lv_explicitStatic_10_0=	'::' 
    {
        newLeafNode(lv_explicitStatic_10_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "explicitStatic", true, "::");
	    }

)
))))(	otherlv_11='<' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0()); 
	    }
		lv_typeArguments_12_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_12_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0()); 
	    }
		lv_typeArguments_14_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_14_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15='>' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0()); 
	    }
		ruleFeatureCallID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
	'(' 
 

)
)=>
(
		lv_explicitOperationCall_17_0=	'(' 
    {
        newLeafNode(lv_explicitOperationCall_17_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "explicitOperationCall", true, "(");
	    }

)
)(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0()); 
	    }
		lv_memberCallArguments_18_0=ruleXShortClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_18_0, 
        		"XShortClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0()); 
	    }
		lv_memberCallArguments_19_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_19_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_20=',' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0()); 
	    }
		lv_memberCallArguments_21_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_21_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*))?	otherlv_22=')' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
    }
)?((((
)	'[' 
))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0()); 
	    }
		lv_memberCallArguments_23_0=ruleXClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_23_0, 
        		"XClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)?))*)
;





// Entry rule entryRuleXPrimaryExpression
entryRuleXPrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); }
	 iv_ruleXPrimaryExpression=ruleXPrimaryExpression 
	 { $current=$iv_ruleXPrimaryExpression.current; } 
	 EOF 
;

// Rule XPrimaryExpression
ruleXPrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0()); 
    }
    this_XConstructorCall_0=ruleXConstructorCall
    { 
        $current = $this_XConstructorCall_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1()); 
    }
    this_XBlockExpression_1=ruleXBlockExpression
    { 
        $current = $this_XBlockExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2()); 
    }
    this_XSwitchExpression_2=ruleXSwitchExpression
    { 
        $current = $this_XSwitchExpression_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_3()); 
    }
    this_XFeatureCall_3=ruleXFeatureCall
    { 
        $current = $this_XFeatureCall_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_4()); 
    }
    this_XLiteral_4=ruleXLiteral
    { 
        $current = $this_XLiteral_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_5()); 
    }
    this_XIfExpression_5=ruleXIfExpression
    { 
        $current = $this_XIfExpression_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_6()); 
    }
    this_XForLoopExpression_6=ruleXForLoopExpression
    { 
        $current = $this_XForLoopExpression_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_7()); 
    }
    this_XWhileExpression_7=ruleXWhileExpression
    { 
        $current = $this_XWhileExpression_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_8()); 
    }
    this_XDoWhileExpression_8=ruleXDoWhileExpression
    { 
        $current = $this_XDoWhileExpression_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_9()); 
    }
    this_XThrowExpression_9=ruleXThrowExpression
    { 
        $current = $this_XThrowExpression_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_10()); 
    }
    this_XReturnExpression_10=ruleXReturnExpression
    { 
        $current = $this_XReturnExpression_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_11()); 
    }
    this_XTryCatchFinallyExpression_11=ruleXTryCatchFinallyExpression
    { 
        $current = $this_XTryCatchFinallyExpression_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_12()); 
    }
    this_XParenthesizedExpression_12=ruleXParenthesizedExpression
    { 
        $current = $this_XParenthesizedExpression_12.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXLiteral
entryRuleXLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXLiteralRule()); }
	 iv_ruleXLiteral=ruleXLiteral 
	 { $current=$iv_ruleXLiteral.current; } 
	 EOF 
;

// Rule XLiteral
ruleXLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0()); 
    }
    this_XCollectionLiteral_0=ruleXCollectionLiteral
    { 
        $current = $this_XCollectionLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((((
)	'[' 
))=>
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1()); 
    }
    this_XClosure_1=ruleXClosure
    { 
        $current = $this_XClosure_1.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2()); 
    }
    this_XBooleanLiteral_2=ruleXBooleanLiteral
    { 
        $current = $this_XBooleanLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3()); 
    }
    this_XNumberLiteral_3=ruleXNumberLiteral
    { 
        $current = $this_XNumberLiteral_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4()); 
    }
    this_XNullLiteral_4=ruleXNullLiteral
    { 
        $current = $this_XNullLiteral_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5()); 
    }
    this_XStringLiteral_5=ruleXStringLiteral
    { 
        $current = $this_XStringLiteral_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6()); 
    }
    this_XTypeLiteral_6=ruleXTypeLiteral
    { 
        $current = $this_XTypeLiteral_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXCollectionLiteral
entryRuleXCollectionLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCollectionLiteralRule()); }
	 iv_ruleXCollectionLiteral=ruleXCollectionLiteral 
	 { $current=$iv_ruleXCollectionLiteral.current; } 
	 EOF 
;

// Rule XCollectionLiteral
ruleXCollectionLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0()); 
    }
    this_XSetLiteral_0=ruleXSetLiteral
    { 
        $current = $this_XSetLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1()); 
    }
    this_XListLiteral_1=ruleXListLiteral
    { 
        $current = $this_XListLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXSetLiteral
entryRuleXSetLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXSetLiteralRule()); }
	 iv_ruleXSetLiteral=ruleXSetLiteral 
	 { $current=$iv_ruleXSetLiteral.current; } 
	 EOF 
;

// Rule XSetLiteral
ruleXSetLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
            $current);
    }
)	otherlv_1='#' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); 
	    }
		lv_elements_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); 
	    }
		lv_elements_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleXListLiteral
entryRuleXListLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXListLiteralRule()); }
	 iv_ruleXListLiteral=ruleXListLiteral 
	 { $current=$iv_ruleXListLiteral.current; } 
	 EOF 
;

// Rule XListLiteral
ruleXListLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
            $current);
    }
)	otherlv_1='#' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
    }
	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); 
	    }
		lv_elements_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXListLiteralRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); 
	    }
		lv_elements_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXListLiteralRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleXClosure
entryRuleXClosure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXClosureRule()); }
	 iv_ruleXClosure=ruleXClosure 
	 { $current=$iv_ruleXClosure.current; } 
	 EOF 
;

// Rule XClosure
ruleXClosure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
)	'[' 
))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
    }
))(((((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>(((
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0()); 
	    }
		lv_declaredFormalParameters_2_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_2_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0()); 
	    }
		lv_declaredFormalParameters_4_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_4_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(
(
		lv_explicitSyntax_5_0=	'|' 
    {
        newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXClosureRule());
	        }
       		setWithLastConsumed($current, "explicitSyntax", true, "|");
	    }

)
)))?(
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0()); 
	    }
		lv_expression_6_0=ruleXExpressionInClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_6_0, 
        		"XExpressionInClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleXExpressionInClosure
entryRuleXExpressionInClosure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExpressionInClosureRule()); }
	 iv_ruleXExpressionInClosure=ruleXExpressionInClosure 
	 { $current=$iv_ruleXExpressionInClosure.current; } 
	 EOF 
;

// Rule XExpressionInClosure
ruleXExpressionInClosure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionInsideBlockParserRuleCall_1_0_0()); 
	    }
		lv_expressions_1_0=ruleXExpressionInsideBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_1_0, 
        		"XExpressionInsideBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
    }
)?)*)
;





// Entry rule entryRuleXShortClosure
entryRuleXShortClosure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXShortClosureRule()); }
	 iv_ruleXShortClosure=ruleXShortClosure 
	 { $current=$iv_ruleXShortClosure.current; } 
	 EOF 
;

// Rule XShortClosure
ruleXShortClosure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0()); 
	    }
		lv_declaredFormalParameters_1_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXShortClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_1_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0()); 
	    }
		lv_declaredFormalParameters_3_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXShortClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_3_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(
(
		lv_explicitSyntax_4_0=	'|' 
    {
        newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXShortClosureRule());
	        }
       		setWithLastConsumed($current, "explicitSyntax", true, "|");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0()); 
	    }
		lv_expression_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXShortClosureRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXParenthesizedExpression
entryRuleXParenthesizedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); }
	 iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression 
	 { $current=$iv_ruleXParenthesizedExpression.current; } 
	 EOF 
;

// Rule XParenthesizedExpression
ruleXParenthesizedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); 
    }
    this_XExpression_1=ruleXExpression
    { 
        $current = $this_XExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleXIfExpression
entryRuleXIfExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXIfExpressionRule()); }
	 iv_ruleXIfExpression=ruleXIfExpression 
	 { $current=$iv_ruleXIfExpression.current; } 
	 EOF 
;

// Rule XIfExpression
ruleXIfExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
            $current);
    }
)	otherlv_1='if' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0()); 
	    }
		lv_if_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
	        }
       		set(
       			$current, 
       			"if",
        		lv_if_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0()); 
	    }
		lv_then_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'else' 
)=>	otherlv_6='else' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0()); 
	    }
		lv_else_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
	        }
       		set(
       			$current, 
       			"else",
        		lv_else_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleXSwitchExpression
entryRuleXSwitchExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXSwitchExpressionRule()); }
	 iv_ruleXSwitchExpression=ruleXSwitchExpression 
	 { $current=$iv_ruleXSwitchExpression.current; } 
	 EOF 
;

// Rule XSwitchExpression
ruleXSwitchExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
            $current);
    }
)	otherlv_1='switch' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
    }
((((((
(
ruleValidID
)
)	':' 
))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameValidIDParserRuleCall_2_0_0_0_0_0()); 
	    }
		lv_localVarName_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"localVarName",
        		lv_localVarName_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_1());
    }
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0()); 
	    }
		lv_switch_4_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"switch",
        		lv_switch_4_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((((	'(' 
(
(
ruleValidID
)
)	':' 
))=>(	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_1_0_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameValidIDParserRuleCall_2_1_0_0_1_0()); 
	    }
		lv_localVarName_6_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"localVarName",
        		lv_localVarName_6_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_2());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0()); 
	    }
		lv_switch_8_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"switch",
        		lv_switch_8_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_1_2());
    }
))	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0()); 
	    }
		lv_cases_11_0=ruleXCasePart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_11_0, 
        		"XCasePart");
	        afterParserOrEnumRuleCall();
	    }

)
)+(	otherlv_12='default' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
    }
	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0()); 
	    }
		lv_default_14_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"default",
        		lv_default_14_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleXCasePart
entryRuleXCasePart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCasePartRule()); }
	 iv_ruleXCasePart=ruleXCasePart 
	 { $current=$iv_ruleXCasePart.current; } 
	 EOF 
;

// Rule XCasePart
ruleXCasePart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_typeGuard_0_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCasePartRule());
	        }
       		set(
       			$current, 
       			"typeGuard",
        		lv_typeGuard_0_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_1='case' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXCasePartAccess().getCaseKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_1_1_0()); 
	    }
		lv_case_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCasePartRule());
	        }
       		set(
       			$current, 
       			"case",
        		lv_case_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXCasePartAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0()); 
	    }
		lv_then_4_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCasePartRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_4_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXForLoopExpression
entryRuleXForLoopExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXForLoopExpressionRule()); }
	 iv_ruleXForLoopExpression=ruleXForLoopExpression 
	 { $current=$iv_ruleXForLoopExpression.current; } 
	 EOF 
;

// Rule XForLoopExpression
ruleXForLoopExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0(),
            $current);
    }
)	otherlv_1='for' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_3_0()); 
	    }
		lv_declaredParam_3_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
	        }
       		set(
       			$current, 
       			"declaredParam",
        		lv_declaredParam_3_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_5_0()); 
	    }
		lv_forExpression_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
	        }
       		set(
       			$current, 
       			"forExpression",
        		lv_forExpression_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_7_0()); 
	    }
		lv_eachExpression_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
	        }
       		set(
       			$current, 
       			"eachExpression",
        		lv_eachExpression_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXWhileExpression
entryRuleXWhileExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXWhileExpressionRule()); }
	 iv_ruleXWhileExpression=ruleXWhileExpression 
	 { $current=$iv_ruleXWhileExpression.current; } 
	 EOF 
;

// Rule XWhileExpression
ruleXWhileExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
            $current);
    }
)	otherlv_1='while' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0()); 
	    }
		lv_predicate_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0()); 
	    }
		lv_body_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXDoWhileExpression
entryRuleXDoWhileExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); }
	 iv_ruleXDoWhileExpression=ruleXDoWhileExpression 
	 { $current=$iv_ruleXDoWhileExpression.current; } 
	 EOF 
;

// Rule XDoWhileExpression
ruleXDoWhileExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
            $current);
    }
)	otherlv_1='do' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0()); 
	    }
		lv_body_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='while' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
    }
	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0()); 
	    }
		lv_predicate_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleXBlockExpression
entryRuleXBlockExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBlockExpressionRule()); }
	 iv_ruleXBlockExpression=ruleXBlockExpression 
	 { $current=$iv_ruleXBlockExpression.current; } 
	 EOF 
;

// Rule XBlockExpression
ruleXBlockExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionInsideBlockParserRuleCall_2_0_0()); 
	    }
		lv_expressions_2_0=ruleXExpressionInsideBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_2_0, 
        		"XExpressionInsideBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
    }
)?)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleXExpressionInsideBlock
entryRuleXExpressionInsideBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExpressionInsideBlockRule()); }
	 iv_ruleXExpressionInsideBlock=ruleXExpressionInsideBlock 
	 { $current=$iv_ruleXExpressionInsideBlock.current; } 
	 EOF 
;

// Rule XExpressionInsideBlock
ruleXExpressionInsideBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXExpressionInsideBlockAccess().getXVariableDeclarationParserRuleCall_0()); 
    }
    this_XVariableDeclaration_0=ruleXVariableDeclaration
    { 
        $current = $this_XVariableDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXExpressionInsideBlockAccess().getXExpressionParserRuleCall_1()); 
    }
    this_XExpression_1=ruleXExpression
    { 
        $current = $this_XExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXVariableDeclaration
entryRuleXVariableDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXVariableDeclarationRule()); }
	 iv_ruleXVariableDeclaration=ruleXVariableDeclaration 
	 { $current=$iv_ruleXVariableDeclaration.current; } 
	 EOF 
;

// Rule XVariableDeclaration
ruleXVariableDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
            $current);
    }
)((
(
		lv_writeable_1_0=	'var' 
    {
        newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXVariableDeclarationRule());
	        }
       		setWithLastConsumed($current, "writeable", true, "var");
	    }

)
)
    |	otherlv_2='val' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1());
    }
)(((((
(
ruleJvmTypeReference
)
)(
(
ruleValidID
)
)))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0()); 
	    }
		lv_name_4_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0()); 
	    }
		lv_name_5_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0()); 
	    }
		lv_right_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleJvmFormalParameter
entryRuleJvmFormalParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmFormalParameterRule()); }
	 iv_ruleJvmFormalParameter=ruleJvmFormalParameter 
	 { $current=$iv_ruleJvmFormalParameter.current; } 
	 EOF 
;

// Rule JvmFormalParameter
ruleJvmFormalParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_parameterType_0_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"parameterType",
        		lv_parameterType_0_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFullJvmFormalParameter
entryRuleFullJvmFormalParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); }
	 iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter 
	 { $current=$iv_ruleFullJvmFormalParameter.current; } 
	 EOF 
;

// Rule FullJvmFormalParameter
ruleFullJvmFormalParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_parameterType_0_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"parameterType",
        		lv_parameterType_0_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXFeatureCall
entryRuleXFeatureCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXFeatureCallRule()); }
	 iv_ruleXFeatureCall=ruleXFeatureCall 
	 { $current=$iv_ruleXFeatureCall.current; } 
	 EOF 
;

// Rule XFeatureCall
ruleXFeatureCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
            $current);
    }
)(	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
	    }
		lv_typeArguments_2_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_2_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
	    }
		lv_typeArguments_4_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_4_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0()); 
	    }
		ruleIdOrSuper		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
	'(' 
 

)
)=>
(
		lv_explicitOperationCall_7_0=	'(' 
    {
        newLeafNode(lv_explicitOperationCall_7_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXFeatureCallRule());
	        }
       		setWithLastConsumed($current, "explicitOperationCall", true, "(");
	    }

)
)(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0()); 
	    }
		lv_featureCallArguments_8_0=ruleXShortClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_8_0, 
        		"XShortClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0()); 
	    }
		lv_featureCallArguments_9_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_9_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0()); 
	    }
		lv_featureCallArguments_11_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_11_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*))?	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2());
    }
)?((((
)	'[' 
))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0()); 
	    }
		lv_featureCallArguments_13_0=ruleXClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_13_0, 
        		"XClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleFeatureCallID
entryRuleFeatureCallID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureCallIDRule()); } 
	 iv_ruleFeatureCallID=ruleFeatureCallID 
	 { $current=$iv_ruleFeatureCallID.current.getText(); }  
	 EOF 
;

// Rule FeatureCallID
ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw='extends' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1()); 
    }

    |
	kw='static' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2()); 
    }

    |
	kw='import' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getImportKeyword_3()); 
    }

    |
	kw='extension' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleIdOrSuper
entryRuleIdOrSuper returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdOrSuperRule()); } 
	 iv_ruleIdOrSuper=ruleIdOrSuper 
	 { $current=$iv_ruleIdOrSuper.current.getText(); }  
	 EOF 
;

// Rule IdOrSuper
ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0()); 
    }
    this_FeatureCallID_0=ruleFeatureCallID    {
		$current.merge(this_FeatureCallID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw='super' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXConstructorCall
entryRuleXConstructorCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXConstructorCallRule()); }
	 iv_ruleXConstructorCall=ruleXConstructorCall 
	 { $current=$iv_ruleXConstructorCall.current; } 
	 EOF 
;

// Rule XConstructorCall
ruleXConstructorCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
            $current);
    }
)	otherlv_1='new' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXConstructorCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'<' 
)=>	otherlv_3='<' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); 
	    }
		lv_typeArguments_4_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_4_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); 
	    }
		lv_typeArguments_6_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_6_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='>' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
    }
)?(((	'(' 
)=>	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXConstructorCallAccess().getLeftParenthesisKeyword_4_0());
    }
)(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0()); 
	    }
		lv_arguments_9_0=ruleXShortClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_9_0, 
        		"XShortClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0()); 
	    }
		lv_arguments_10_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_10_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); 
	    }
		lv_arguments_12_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_12_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*))?	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
    }
)?((((
)	'[' 
))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0()); 
	    }
		lv_arguments_14_0=ruleXClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_14_0, 
        		"XClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleXBooleanLiteral
entryRuleXBooleanLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBooleanLiteralRule()); }
	 iv_ruleXBooleanLiteral=ruleXBooleanLiteral 
	 { $current=$iv_ruleXBooleanLiteral.current; } 
	 EOF 
;

// Rule XBooleanLiteral
ruleXBooleanLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
            $current);
    }
)(	otherlv_1='false' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
    }

    |(
(
		lv_isTrue_2_0=	'true' 
    {
        newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXBooleanLiteralRule());
	        }
       		setWithLastConsumed($current, "isTrue", true, "true");
	    }

)
)))
;





// Entry rule entryRuleXNullLiteral
entryRuleXNullLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXNullLiteralRule()); }
	 iv_ruleXNullLiteral=ruleXNullLiteral 
	 { $current=$iv_ruleXNullLiteral.current; } 
	 EOF 
;

// Rule XNullLiteral
ruleXNullLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
            $current);
    }
)	otherlv_1='null' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
    }
)
;





// Entry rule entryRuleXNumberLiteral
entryRuleXNumberLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXNumberLiteralRule()); }
	 iv_ruleXNumberLiteral=ruleXNumberLiteral 
	 { $current=$iv_ruleXNumberLiteral.current; } 
	 EOF 
;

// Rule XNumberLiteral
ruleXNumberLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"Number");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXStringLiteral
entryRuleXStringLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXStringLiteralRule()); }
	 iv_ruleXStringLiteral=ruleXStringLiteral 
	 { $current=$iv_ruleXStringLiteral.current; } 
	 EOF 
;

// Rule XStringLiteral
ruleXStringLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXStringLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleXTypeLiteral
entryRuleXTypeLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXTypeLiteralRule()); }
	 iv_ruleXTypeLiteral=ruleXTypeLiteral 
	 { $current=$iv_ruleXTypeLiteral.current; } 
	 EOF 
;

// Rule XTypeLiteral
ruleXTypeLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
            $current);
    }
)	otherlv_1='typeof' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXTypeLiteralRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0()); 
	    }
		lv_arrayDimensions_4_0=ruleArrayBrackets		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTypeLiteralRule());
	        }
       		add(
       			$current, 
       			"arrayDimensions",
        		lv_arrayDimensions_4_0, 
        		"ArrayBrackets");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleXThrowExpression
entryRuleXThrowExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXThrowExpressionRule()); }
	 iv_ruleXThrowExpression=ruleXThrowExpression 
	 { $current=$iv_ruleXThrowExpression.current; } 
	 EOF 
;

// Rule XThrowExpression
ruleXThrowExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
            $current);
    }
)	otherlv_1='throw' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXReturnExpression
entryRuleXReturnExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXReturnExpressionRule()); }
	 iv_ruleXReturnExpression=ruleXReturnExpression 
	 { $current=$iv_ruleXReturnExpression.current; } 
	 EOF 
;

// Rule XReturnExpression
ruleXReturnExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
            $current);
    }
)	otherlv_1='return' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
    }
((
(
ruleXExpression
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleXTryCatchFinallyExpression
entryRuleXTryCatchFinallyExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); }
	 iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression 
	 { $current=$iv_ruleXTryCatchFinallyExpression.current; } 
	 EOF 
;

// Rule XTryCatchFinallyExpression
ruleXTryCatchFinallyExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
            $current);
    }
)	otherlv_1='try' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)((((	'catch' 
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0()); 
	    }
		lv_catchClauses_3_0=ruleXCatchClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		add(
       			$current, 
       			"catchClauses",
        		lv_catchClauses_3_0, 
        		"XCatchClause");
	        afterParserOrEnumRuleCall();
	    }

)
)+(((	'finally' 
)=>	otherlv_4='finally' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0()); 
	    }
		lv_finallyExpression_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		set(
       			$current, 
       			"finallyExpression",
        		lv_finallyExpression_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(	otherlv_6='finally' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0()); 
	    }
		lv_finallyExpression_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		set(
       			$current, 
       			"finallyExpression",
        		lv_finallyExpression_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleXCatchClause
entryRuleXCatchClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCatchClauseRule()); }
	 iv_ruleXCatchClause=ruleXCatchClause 
	 { $current=$iv_ruleXCatchClause.current; } 
	 EOF 
;

// Rule XCatchClause
ruleXCatchClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	'catch' 
)=>	otherlv_0='catch' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
    }
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0()); 
	    }
		lv_declaredParam_2_0=ruleFullJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
	        }
       		set(
       			$current, 
       			"declaredParam",
        		lv_declaredParam_2_0, 
        		"FullJvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0()); 
	    }
		lv_expression_4_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_4_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(((
	'.' 
)=>
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
)
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); 
    }
    this_ValidID_2=ruleValidID    {
		$current.merge(this_ValidID_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleNumber
entryRuleNumber returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getNumberRule()); } 
	 iv_ruleNumber=ruleNumber 
	 { $current=$iv_ruleNumber.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Number
ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(    this_HEX_0=RULE_HEX    {
		$current.merge(this_HEX_0);
    }

    { 
    newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); 
    }

    |((    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); 
    }

    |    this_DECIMAL_2=RULE_DECIMAL    {
		$current.merge(this_DECIMAL_2);
    }

    { 
    newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); 
    }
)(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); 
    }
(    this_INT_4=RULE_INT    {
		$current.merge(this_INT_4);
    }

    { 
    newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); 
    }

    |    this_DECIMAL_5=RULE_DECIMAL    {
		$current.merge(this_DECIMAL_5);
    }

    { 
    newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); 
    }
))?))
    ;
finally {
	myHiddenTokenState.restore();
}







// Entry rule entryRuleJvmTypeReference
entryRuleJvmTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); }
	 iv_ruleJvmTypeReference=ruleJvmTypeReference 
	 { $current=$iv_ruleJvmTypeReference.current; } 
	 EOF 
;

// Rule JvmTypeReference
ruleJvmTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); 
    }
    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference
    { 
        $current = $this_JvmParameterizedTypeReference_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
)	ruleArrayBrackets))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1()); 
    }
ruleArrayBrackets
    { 
        afterParserOrEnumRuleCall();
    }
))*)
    |
    { 
        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); 
    }
    this_XFunctionTypeRef_3=ruleXFunctionTypeRef
    { 
        $current = $this_XFunctionTypeRef_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleArrayBrackets
entryRuleArrayBrackets returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayBracketsRule()); } 
	 iv_ruleArrayBrackets=ruleArrayBrackets 
	 { $current=$iv_ruleArrayBrackets.current.getText(); }  
	 EOF 
;

// Rule ArrayBrackets
ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); 
    }

	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXFunctionTypeRef
entryRuleXFunctionTypeRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); }
	 iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef 
	 { $current=$iv_ruleXFunctionTypeRef.current; } 
	 EOF 
;

// Rule XFunctionTypeRef
ruleXFunctionTypeRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); 
	    }
		lv_paramTypes_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
	        }
       		add(
       			$current, 
       			"paramTypes",
        		lv_paramTypes_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); 
	    }
		lv_paramTypes_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
	        }
       		add(
       			$current, 
       			"paramTypes",
        		lv_paramTypes_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
    }
)?	otherlv_5='=>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); 
	    }
		lv_returnType_6_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_6_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmParameterizedTypeReference
entryRuleJvmParameterizedTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); }
	 iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference 
	 { $current=$iv_ruleJvmParameterizedTypeReference.current; } 
	 EOF 
;

// Rule JvmParameterizedTypeReference
ruleJvmParameterizedTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'<' 
)=>	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
	    }
		lv_arguments_2_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_2_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
	    }
		lv_arguments_4_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_4_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
    }
)?)
;





// Entry rule entryRuleJvmArgumentTypeReference
entryRuleJvmArgumentTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); }
	 iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference 
	 { $current=$iv_ruleJvmArgumentTypeReference.current; } 
	 EOF 
;

// Rule JvmArgumentTypeReference
ruleJvmArgumentTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); 
    }
    this_JvmTypeReference_0=ruleJvmTypeReference
    { 
        $current = $this_JvmTypeReference_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); 
    }
    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference
    { 
        $current = $this_JvmWildcardTypeReference_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleJvmWildcardTypeReference
entryRuleJvmWildcardTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); }
	 iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference 
	 { $current=$iv_ruleJvmWildcardTypeReference.current; } 
	 EOF 
;

// Rule JvmWildcardTypeReference
ruleJvmWildcardTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
            $current);
    }
)	otherlv_1='?' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0()); 
	    }
		lv_constraints_2_0=ruleJvmUpperBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_2_0, 
        		"JvmUpperBound");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0()); 
	    }
		lv_constraints_3_0=ruleJvmLowerBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_3_0, 
        		"JvmLowerBound");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleJvmUpperBound
entryRuleJvmUpperBound returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmUpperBoundRule()); }
	 iv_ruleJvmUpperBound=ruleJvmUpperBound 
	 { $current=$iv_ruleJvmUpperBound.current; } 
	 EOF 
;

// Rule JvmUpperBound
ruleJvmUpperBound returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='extends' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmUpperBoundAnded
entryRuleJvmUpperBoundAnded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); }
	 iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded 
	 { $current=$iv_ruleJvmUpperBoundAnded.current; } 
	 EOF 
;

// Rule JvmUpperBoundAnded
ruleJvmUpperBoundAnded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='&' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmLowerBound
entryRuleJvmLowerBound returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmLowerBoundRule()); }
	 iv_ruleJvmLowerBound=ruleJvmLowerBound 
	 { $current=$iv_ruleJvmLowerBound.current; } 
	 EOF 
;

// Rule JvmLowerBound
ruleJvmLowerBound returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='super' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard 
	 { $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1()); 
    }

	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleValidID
entryRuleValidID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getValidIDRule()); } 
	 iv_ruleValidID=ruleValidID 
	 { $current=$iv_ruleValidID.current.getText(); }  
	 EOF 
;

// Rule ValidID
ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); 
    }

    ;







// Entry rule entryRuleXImportDeclaration
entryRuleXImportDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXImportDeclarationRule()); }
	 iv_ruleXImportDeclaration=ruleXImportDeclaration 
	 { $current=$iv_ruleXImportDeclaration.current; } 
	 EOF 
;

// Rule XImportDeclaration
ruleXImportDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
    }
(((
(
		lv_static_1_0=	'static' 
    {
        newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXImportDeclarationRule());
	        }
       		setWithLastConsumed($current, "static", true, "static");
	    }

)
)(
(
		lv_extension_2_0=	'extension' 
    {
        newLeafNode(lv_extension_2_0, grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXImportDeclarationRule());
	        }
       		setWithLastConsumed($current, "extension", true, "extension");
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXImportDeclarationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='.' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXImportDeclarationAccess().getFullStopKeyword_1_0_3());
    }
	otherlv_5='*' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXImportDeclarationAccess().getAsteriskKeyword_1_0_4());
    }
)
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXImportDeclarationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0()); 
	    }
		lv_importedNamespace_7_0=ruleQualifiedNameWithWildcard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_7_0, 
        		"QualifiedNameWithWildcard");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
    }
)?)
;





// Rule ProvidedType
ruleProvidedType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='entity' 
	{
        $current = grammarAccess.getProvidedTypeAccess().getENTITYEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getProvidedTypeAccess().getENTITYEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='dto' 
	{
        $current = grammarAccess.getProvidedTypeAccess().getDTOEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getProvidedTypeAccess().getDTOEnumLiteralDeclaration_1()); 
    }
));



// Rule MarkupOrientation
ruleMarkupOrientation returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='left' 
	{
        $current = grammarAccess.getMarkupOrientationAccess().getLEFTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getMarkupOrientationAccess().getLEFTEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='none' 
	{
        $current = grammarAccess.getMarkupOrientationAccess().getNONEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getMarkupOrientationAccess().getNONEEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='right' 
	{
        $current = grammarAccess.getMarkupOrientationAccess().getRIGHTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getMarkupOrientationAccess().getRIGHTEnumLiteralDeclaration_2()); 
    }
));



RULE_RICH_TEXT : '\'\'\'' RULE_IN_RICH_STRING* ('\'\'\''|('\'' '\''?)? EOF);

RULE_RICH_TEXT_START : '\'\'\'' RULE_IN_RICH_STRING* ('\'' '\''?)? '\u00AB';

RULE_RICH_TEXT_END : '\u00BB' RULE_IN_RICH_STRING* ('\'\'\''|('\'' '\''?)? EOF);

RULE_RICH_TEXT_INBETWEEN : '\u00BB' RULE_IN_RICH_STRING* ('\'' '\''?)? '\u00AB';

RULE_COMMENT_RICH_TEXT_INBETWEEN : '\u00AB\u00AB' ~(('\n'|'\r'))* ('\r'? '\n' RULE_IN_RICH_STRING* ('\'' '\''?)? '\u00AB')?;

RULE_COMMENT_RICH_TEXT_END : '\u00AB\u00AB' ~(('\n'|'\r'))* ('\r'? '\n' RULE_IN_RICH_STRING* ('\'\'\''|('\'' '\''?)? EOF)|EOF);

fragment RULE_IN_RICH_STRING : ('\'\'' ~(('\u00AB'|'\''))|'\'' ~(('\u00AB'|'\''))|~(('\u00AB'|'\'')));

RULE_HEX : ('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F'|'_')+ ('#' (('b'|'B') ('i'|'I')|('l'|'L')))?;

RULE_INT : '0'..'9' ('0'..'9'|'_')*;

RULE_DECIMAL : RULE_INT (('e'|'E') ('+'|'-')? RULE_INT)? (('b'|'B') ('i'|'I'|'d'|'D')|('l'|'L'|'d'|'D'|'f'|'F'))?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'$'|'_') ('a'..'z'|'A'..'Z'|'$'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


