/*******************************************************************************
 * Copyright (c) 2013 Loetz KG (Heidelberg), Petra Bierleutgeb and others.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 ******************************************************************************/

grammar org.lunifera.doc.dsl.LuniferaDocGrammar with org.eclipse.xtext.xbase.Xbase

import "http://www.lunifera.org/luniferadoc" as luniferadoc
import "http://www.lunifera.org/luniferadoc/layout" as layout
import "http://www.lunifera.org/luniferadoc/document" as document
import "http://www.lunifera.org/luniferadoc/richstring" as richstring
import "http://www.eclipse.org/xtext/xbase/Xbase" as xbase

NamedDocument returns luniferadoc::NamedDocument:
	LuniferaDocLayout | LuniferaDocDocument;

LuniferaDocDocument returns document::LuniferaDocDocument:
	EntityDocument | DTODocument | BPMProcessDocument | BPMHumanTaskDocument | VaaclipseViewDocument | UIDocument;
	
LuniferaDocLayout returns layout::LuniferaDocLayout:
	GeneralDocument | EntityLayout | DTOLayout | BPMProcessLayout | BPMHumanTaskLayout | VaaclipseViewLayout | UILayout;

DocumentInclude returns luniferadoc::DocumentInclude:
	'include' include=[document::LuniferaDocDocument|QualifiedName] 'as' varName=ID;

enum IncludeType returns luniferadoc::DocType:
	ENTITY = 'ENTITY' | DTO = 'DTO' | BPM_PROCESS = 'BPM_PROCESS' | BPM_TASK = 'BPM_TASK' | 
	VAACLIPSE_VIEW = 'VAACLIPSE_VIEW' | UI = 'UI';

// LAYOUTS

EntityLayout returns layout::EntityLayout:
	'EntityLayout' name=QualifiedName '{'
	imports+=XImportDeclaration*
	content=RichString
	'}';
	
DTOLayout returns layout::DTOLayout:
	'DTOLayout' name=QualifiedName '{'
	imports+=XImportDeclaration*
	content=RichString
	'}';
	
BPMProcessLayout returns layout::BPMProcessLayout:
	'BPMProcessLayout' name=QualifiedName '{'
	imports+=XImportDeclaration*
	content=RichString
	'}';
	
BPMHumanTaskLayout returns layout::BPMHumanTaskLayout:
	'BPMHumanTaskLayout' name=QualifiedName '{'
	imports+=XImportDeclaration*
	content=RichString
	'}';
	
VaaclipseViewLayout returns layout::VaaclipseViewLayout:
	'VaaclipseViewLayout' name=QualifiedName '{'
	imports+=XImportDeclaration*
	content=RichString
	'}';
	
UILayout returns layout::UILayout:
	'UILayout' name=QualifiedName '{'
	imports+=XImportDeclaration*
	content=RichString
	'}';
	
// DOCUMENTS
	
GeneralDocument returns document::GeneralDocument:
	'GeneralDocument' name=QualifiedName '{'
	imports+=XImportDeclaration*
	includes+=DocumentInclude*
	content=RichString
	'}';
	
EntityDocument returns document::EntityDocument:
	'EntityDocument' name=QualifiedName 'for' entityClass=QualifiedName '{'
	'description' '{' description=EntityDescription	'}'
	'fields' '{' fields=EntityFields '}'
	'}';
	
EntityDescription returns document::EntityDescription:
	{document::EntityDescription} content=RichString;
	
EntityFields returns document::EntityFields:
	{document::EntityFields} fields+=EntityField*;
	
EntityField returns document::EntityField:
	{document::EntityField} 'name' name=ID
	('type' type=ID)?
	('length' length=INT)?
	('pk' pk?="true")?
	('nullable' nullable?="true")?
	'description' '{' description=RichString '}';
	
DTODocument returns document::DTODocument:
	'DTODocument' name=QualifiedName 'for' dtoClass=QualifiedName '{'
	'description' '{' description=DTODescription '}'
	'properties' '{' properties=DTOProperties '}'
	'}';

DTODescription returns document::DTODescription:
	{document::DTODescription} content=RichString;
	
DTOProperties returns document::DTOProperties:
	{document::DTOProperties} properties+=DTOProperty*;
	
DTOProperty returns document::DTOProperty:
	{document::DTOProperty} 'name' name=ID
	'description' '{' description=RichString '}';

BPMProcessDocument returns document::BPMProcessDocument:
	'BPMProcessDocument' name=QualifiedName 'for' process=STRING '{'
	'description' '{' description=BPMProcessDescription '}'
	'}';
	
BPMProcessDescription returns document::BPMProcessDescription:
	{document::BPMProcessDescription} content=RichString;
	
BPMHumanTaskDocument returns document::BPMHumanTaskDocument:
	'BPMHumanTaskDocument' name=QualifiedName 'for' task=STRING '{'
	'description' '{' description=BPMHumanTaskDescription '}'
	'}';
	
BPMHumanTaskDescription returns document::BPMHumanTaskDescription:
	{document::BPMHumanTaskDescription} content=RichString;

VaaclipseViewDocument returns document::VaaclipseViewDocument:
	'VaaclipseViewDocument' name=QualifiedName 'for' view=STRING '{'
	'description' '{' description=VaaclipseViewDescription '}'
	'}';
	
VaaclipseViewDescription returns document::VaaclipseViewDescription:
	{document::VaaclipseViewDescription} content=RichString;
	
UIDocument returns document::UIDocument:
	'UIDocument' name=QualifiedName 'for' ui=STRING '{'
	'description' '{' description=UIDescription '}'
	'}';
	
UIDescription returns document::UIDescription:
	{document::UIDescription} content=RichString;

// RichString

RichString returns richstring::RichString:
	{richstring::RichString} (expressions+=RichStringLiteral |
	expressions+=RichStringLiteralStart expressions+=RichStringPart?
	(expressions+=RichStringLiteralInbetween expressions+=RichStringPart?)*
	expressions+=RichStringLiteralEnd);

RichStringLiteral returns xbase::XExpression:
	{richstring::RichStringLiteral} value=RICH_TEXT;

RichStringLiteralStart returns xbase::XExpression:
	{richstring::RichStringLiteral} value=RICH_TEXT_START;

RichStringLiteralInbetween returns xbase::XExpression:
	{richstring::RichStringLiteral}
	(value=RICH_TEXT_INBETWEEN | value=COMMENT_RICH_TEXT_INBETWEEN);

RichStringLiteralEnd returns xbase::XExpression:
	{richstring::RichStringLiteral}
	(value=RICH_TEXT_END | value=COMMENT_RICH_TEXT_END);

InternalRichString returns xbase::XExpression:
	{richstring::RichString} (expressions+=RichStringLiteralInbetween (expressions+=RichStringPart?
	expressions+=RichStringLiteralInbetween)*);

RichStringPart returns xbase::XExpression:
	XExpressionInsideBlock | RichStringForLoop | RichStringIf |
	RichStringH1 | RichStringH2 | RichStringChapter | RichStringSection | RichStringSubsection | 
	RichStringExample | RichStringURL | RichStringRef | RichStringMailto | 
	RichStringSkype | RichStringMovie | RichStringImg |	RichStringBold | 
	RichStringUnderline | RichStringItalic | RichStringCode | RichStringTable | 
	RichStringOpenView | RichStringStartProcess | RichStringEntityRef | RichStringDTORef |
	RichStringProcessRef | RichStringTaskRef | RichStringViewRef | RichStringUIRef;

RichStringExample returns xbase::XExpression:
	{richstring::RichStringExample}
	"example" expression=InternalRichString	"/example"
;

RichStringH1 returns xbase::XExpression:
	{richstring::RichStringH1}
	"h1" expression=InternalRichString "/h1";

RichStringH2 returns xbase::XExpression:
	{richstring::RichStringH2}
	"h2" expression=InternalRichString "/h2";

RichStringChapter returns xbase::XExpression:
	{richstring::RichStringChapter}
	"chapter" "id="id=STRING expression=InternalRichString "/chapter";
	
RichStringSection returns xbase::XExpression:
	{richstring::RichStringSection}
	"section" "id="id=STRING expression=InternalRichString "/section";
	
RichStringSubsection returns xbase::XExpression:
	{richstring::RichStringSubsection}
	"subsection" "id="id=STRING expression=InternalRichString "/subsection";

RichStringURL returns xbase::XExpression:
	{richstring::RichStringURL}
	"url" location=STRING 
	text=InternalRichString
	"/url";
	
RichStringRef returns xbase::XExpression:
	{richstring::RichStringRef}
	"ref" refId=STRING 
	expression=InternalRichString
	"/ref";
	
RichStringMailto returns xbase::XExpression:
	{richstring::RichStringMailto}
	"mailto" email=STRING 
	content=InternalRichString
	"/mailto";
	
RichStringSkype returns xbase::XExpression:
	{richstring::RichStringSkype}
	"skype" target=STRING 
	content=InternalRichString
	"/skype";
	
RichStringMovie returns xbase::XExpression:
	{richstring::RichStringMovie}
	"movie" "src="src=STRING "type="type=STRING "width="width=STRING "height="height=STRING 
	content=InternalRichString
	"/movie";
	
RichStringImg returns xbase::XExpression:
	{richstring::RichStringImg}
	"img" "src="src=STRING "alt="alt=STRING "width="width=STRING "height="height=STRING "/";
	
RichStringBold returns xbase::XExpression:
	{richstring::RichStringBold}
	"bold" expression=InternalRichString "/bold";

RichStringUnderline returns xbase::XExpression:
	{richstring::RichStringUnderline}
	"u" expression=InternalRichString "/u";
	
RichStringItalic returns xbase::XExpression:
	{richstring::RichStringItalic}
	"italic" expression=InternalRichString "/italic";
	
RichStringCode returns xbase::XExpression:
	{richstring::RichStringCode}
	"code" ("lang="lang=STRING)? 
	content=InternalRichString
	"/code";
	
RichStringTable returns xbase::XExpression:
	{richstring::RichStringTable}
	"table" 
	rows+=RichStringTableRow*
	"/table";
	
RichStringTableRow returns richstring::RichStringTableRow:
	{richstring::RichStringTableRow}
	"row" 
	columns+=RichStringTableData*
	"/row";
	
RichStringTableData returns richstring::RichStringTableData:
	{richstring::RichStringTableData}
	"column" 
	expression=InternalRichString
	"/column";
	
RichStringOpenView returns xbase::XExpression:
	{richstring::RichStringOpenView}
	"openview" viewId=STRING 
	expression=InternalRichString
	"/openview";
	
RichStringStartProcess returns xbase::XExpression:
	{richstring::RichStringStartProcess}
	"startprocess" processId=STRING 
	expression=InternalRichString
	"/startprocess";
	
RichStringEntityRef returns xbase::XExpression:
	{richstring::RichStringEntityRef}
	"entity-ref" entityDoc=[document::EntityDocument|QualifiedName] 
	expression=InternalRichString
	"/entity-ref";
	
RichStringDTORef returns xbase::XExpression:
	{richstring::RichStringDTORef}
	"dto-ref" dtoDoc=[document::DTODocument|QualifiedName] 
	expression=InternalRichString
	"/dto-ref";
	
RichStringProcessRef returns xbase::XExpression:
	{richstring::RichStringProcessRef}
	"process-ref" processDoc=[document::BPMProcessDocument|QualifiedName] 
	expression=InternalRichString
	"/process-ref";
	
RichStringTaskRef returns xbase::XExpression:
	{richstring::RichStringTaskRef}
	"task-ref" taskDoc=[document::BPMHumanTaskDocument|QualifiedName] 
	expression=InternalRichString
	"/task-ref";
	
RichStringViewRef returns xbase::XExpression:
	{richstring::RichStringViewRef}
	"view-ref" viewDoc=[document::VaaclipseViewDocument|QualifiedName] 
	expression=InternalRichString
	"/view-ref";
	
RichStringUIRef returns xbase::XExpression:
	{richstring::RichStringUIRef}
	"ui-ref" uiDoc=[document::UIDocument|QualifiedName] 
	expression=InternalRichString
	"/ui-ref";

RichStringForLoop returns xbase::XExpression:
	{richstring::RichStringForLoop}
	"FOR" declaredParam=JvmFormalParameter ':' forExpression=XExpression
	("BEFORE" before=XExpression)?
	("SEPARATOR" separator=XExpression)?
	("AFTER" after=XExpression)?
	eachExpression=InternalRichString
	"ENDFOR";

RichStringIf returns xbase::XExpression:
	{richstring::RichStringIf}
	"IF" if=XExpression
	then=InternalRichString
	elseIfs+=RichStringElseIf*
	("ELSE"
	else=InternalRichString)?
	"ENDIF";

RichStringElseIf returns richstring::RichStringElseIf:
	"ELSEIF" if=XExpression then=InternalRichString;

terminal RICH_TEXT:
	"'''" IN_RICH_STRING* ("'''" | ("'" "'"?)? EOF);

terminal RICH_TEXT_START:
	"'''" IN_RICH_STRING* ("'" "'"?)? '«';

terminal RICH_TEXT_END:
	'»' IN_RICH_STRING* ("'''" | ("'" "'"?)? EOF);

terminal RICH_TEXT_INBETWEEN:
	'»' IN_RICH_STRING* ("'" "'"?)? '«';

terminal COMMENT_RICH_TEXT_INBETWEEN:
	"««" !('\n' | '\r')* ('\r'? '\n' IN_RICH_STRING* ("'" "'"?)? '«')?;

terminal COMMENT_RICH_TEXT_END:
	"««" !('\n' | '\r')* (('\r'? '\n' IN_RICH_STRING* ("'''" | ("'" "'"?)? EOF)) | EOF);

terminal fragment IN_RICH_STRING:
	"''" !('«' | "'")
	| "'" !('«' | "'")
	| !('«' | "'");